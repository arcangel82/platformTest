2025-05-26 09:16:45,714 [main] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 1 stockFactor: 2
2025-05-26 09:16:47,813 [main] INFO  c.p.i.a.i.w.ProductControllerIntegrationTest - Starting ProductControllerIntegrationTest using Java 17.0.14 with PID 16426 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 09:16:47,814 [main] DEBUG c.p.i.a.i.w.ProductControllerIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 09:16:47,814 [main] INFO  c.p.i.a.i.w.ProductControllerIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 09:16:54,139 [main] INFO  c.p.i.a.i.w.ProductControllerIntegrationTest - Started ProductControllerIntegrationTest in 6.711 seconds (process running for 11.045)
2025-05-26 09:16:54,144 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 09:16:54,551 [http-nio-auto-1-exec-1] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:16:54,558 [http-nio-auto-1-exec-1] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 0 stockFactor: 0
2025-05-26 09:16:54,905 [http-nio-auto-1-exec-2] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=1
2025-05-26 09:16:54,906 [http-nio-auto-1-exec-2] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 0 stockFactor: 1
2025-05-26 09:16:54,916 [http-nio-auto-1-exec-3] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:16:54,917 [http-nio-auto-1-exec-3] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 0 stockFactor: 0
2025-05-26 09:16:54,937 [http-nio-auto-1-exec-4] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:16:54,938 [http-nio-auto-1-exec-4] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 0 stockFactor: 0
2025-05-26 09:16:54,948 [http-nio-auto-1-exec-5] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=1, stockFactor=0
2025-05-26 09:16:54,949 [http-nio-auto-1-exec-5] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 1 stockFactor: 0
2025-05-26 09:16:54,959 [http-nio-auto-1-exec-6] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:16:54,960 [http-nio-auto-1-exec-6] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 0 stockFactor: 0
2025-05-26 09:16:55,052 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=-1, stockFactor=-2
2025-05-26 09:16:55,055 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=1, stockFactor=2
2025-05-26 09:16:55,058 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=1, stockFactor=1
2025-05-26 09:16:55,061 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:16:55,065 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with criteria in body: class SortingCriteriaRequest {
    criteria: [class CriteriaWeight {
        id: salesUnits
        weight: 1
    }]
}
2025-05-26 09:48:32,196 [main] INFO  c.p.a.service.ProductService - Requested the products, factors: saleFactor: 1 stockFactor: 2
2025-05-26 09:48:34,457 [main] INFO  c.p.i.a.i.w.ProductControllerIntegrationTest - Starting ProductControllerIntegrationTest using Java 17.0.14 with PID 23011 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 09:48:34,458 [main] DEBUG c.p.i.a.i.w.ProductControllerIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 09:48:34,458 [main] INFO  c.p.i.a.i.w.ProductControllerIntegrationTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 09:48:40,994 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #1 of file [/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes/data.sql]: INSERT INTO PRICES (BRAND_ID, START_DATE, END_DATE, PRICE_LIST, PRODUCT_ID, PRIORITY, PRICE, CURR) VALUES (1, '2020-06-14 00:00:00', '2020-12-31 23:59:59', 1, 35455, 0, 35.50, 'EUR'), (1, '2020-06-14 15:00:00', '2020-06-14 18:30:00', 2, 35455, 1, 25.45, 'EUR'), (1, '2020-06-15 00:00:00', '2020-06-15 11:00:00', 3, 35455, 1, 30.50, 'EUR'), (1, '2020-06-15 16:00:00', '2020-12-31 23:59:59', 4, 35455, 1, 38.95, 'EUR')
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1808)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #1 of file [/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes/data.sql]: INSERT INTO PRICES (BRAND_ID, START_DATE, END_DATE, PRICE_LIST, PRODUCT_ID, PRIORITY, PRICE, CURR) VALUES (1, '2020-06-14 00:00:00', '2020-12-31 23:59:59', 1, 35455, 0, 35.50, 'EUR'), (1, '2020-06-14 15:00:00', '2020-06-14 18:30:00', 2, 35455, 1, 25.45, 'EUR'), (1, '2020-06-15 00:00:00', '2020-06-15 11:00:00', 3, 35455, 1, 30.50, 'EUR'), (1, '2020-06-15 16:00:00', '2020-12-31 23:59:59', 4, 35455, 1, 38.95, 'EUR')
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1804)
	... 101 common frames omitted
Caused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Tabla "PRICES" no encontrada
Table "PRICES" not found; SQL statement:
INSERT INTO PRICES (BRAND_ID, START_DATE, END_DATE, PRICE_LIST, PRODUCT_ID, PRIORITY, PRICE, CURR) VALUES (1, '2020-06-14 00:00:00', '2020-12-31 23:59:59', 1, 35455, 0, 35.50, 'EUR'), (1, '2020-06-14 15:00:00', '2020-06-14 18:30:00', 2, 35455, 1, 25.45, 'EUR'), (1, '2020-06-15 00:00:00', '2020-06-15 11:00:00', 3, 35455, 1, 30.50, 'EUR'), (1, '2020-06-15 16:00:00', '2020-12-31 23:59:59', 4, 35455, 1, 38.95, 'EUR') [42102-232]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:514)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:489)
	at org.h2.message.DbException.get(DbException.java:223)
	at org.h2.message.DbException.get(DbException.java:199)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7945)
	at org.h2.command.Parser.getTableOrViewNotFoundDbException(Parser.java:7916)
	at org.h2.command.Parser.readTableOrView(Parser.java:7895)
	at org.h2.command.Parser.readTableOrView(Parser.java:7857)
	at org.h2.command.Parser.parseInsert(Parser.java:1521)
	at org.h2.command.Parser.parsePrepared(Parser.java:698)
	at org.h2.command.Parser.parse(Parser.java:581)
	at org.h2.command.Parser.parse(Parser.java:556)
	at org.h2.command.Parser.prepareCommand(Parser.java:484)
	at org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)
	at org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:245)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:231)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:94)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 111 common frames omitted
2025-05-26 09:48:41,124 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=-1, stockFactor=-2
2025-05-26 09:48:41,134 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=1, stockFactor=2
2025-05-26 09:48:41,139 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=1, stockFactor=1
2025-05-26 09:48:41,144 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with headers: saleFactor=0, stockFactor=0
2025-05-26 09:48:41,147 [main] DEBUG c.p.i.a.in.web.ProductController - Request to Products Sorted with criteria in body: class SortingCriteriaRequest {
    criteria: [class CriteriaWeight {
        id: salesUnits
        weight: 1
    }]
}
2025-05-26 13:55:14,309 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 146458 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 13:55:14,311 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 13:55:14,311 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 13:55:17,514 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 13:55:17,521 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 13:55:19,225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 13:55:19,227 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 13:55:19,494 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 5.547 seconds (process running for 8.195)
2025-05-26 13:55:19,498 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 13:55:20,047 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 13:55:20,047 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 13:55:20,122 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,200 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 13:55:20,377 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 13:55:20,377 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 13:55:20,380 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,383 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 13:55:20,411 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 13:55:20,440 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 13:55:20,459 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 13:55:20,476 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 13:55:20,493 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 13:55:20,514 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 13:55:20,539 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 13:55:20,539 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 13:55:20,540 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,542 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 13:55:20,544 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 13:55:20,567 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 13:55:20,568 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 13:55:20,570 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,572 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 13:55:20,573 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 13:55:20,589 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 13:55:20,590 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 13:55:20,591 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,594 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 13:55:20,615 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 13:55:20,616 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 13:55:20,618 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,621 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 13:55:20,651 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 13:55:20,651 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 13:55:20,653 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,657 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 13:55:20,675 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 13:55:20,675 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 13:55:20,676 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,679 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 13:55:20,696 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 13:55:20,696 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 13:55:20,697 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 13:55:20,700 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 13:55:20,737 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:01:13,177 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 149295 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:01:13,180 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:01:13,181 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 14:01:15,962 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:01:15,974 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:01:17,347 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 14:01:17,349 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 14:01:17,566 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 4.687 seconds (process running for 5.813)
2025-05-26 14:01:17,569 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:01:17,949 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 14:01:17,949 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 14:01:18,013 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,056 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:01:18,156 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 14:01:18,157 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 14:01:18,177 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,181 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:01:18,208 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 14:01:18,236 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 14:01:18,252 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 14:01:18,267 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 14:01:18,281 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 14:01:18,295 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 14:01:18,307 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 14:01:18,308 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 14:01:18,309 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,310 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 14:01:18,311 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 14:01:18,324 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 14:01:18,325 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 14:01:18,326 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,328 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 14:01:18,329 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 14:01:18,342 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 14:01:18,343 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 14:01:18,344 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,347 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 14:01:18,361 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 14:01:18,361 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 14:01:18,362 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,365 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:01:18,382 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 14:01:18,382 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 14:01:18,383 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,385 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 14:01:18,399 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 14:01:18,399 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 14:01:18,400 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,403 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 14:01:18,422 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 14:01:18,422 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 14:01:18,423 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:01:18,425 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 14:01:18,454 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:03:56,388 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 150657 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:03:56,389 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:03:56,390 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 14:03:58,765 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:03:58,771 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:03:59,621 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:03:59,669 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Failed to bind properties under 'spring.jackson.serialization' to java.util.Map<com.fasterxml.jackson.databind.SerializationFeature, java.lang.Boolean>:

    Property: spring.jackson.serialization.write-dates-as-timestamps
    Value: "false"
    Origin: class path resource [application.yml] - 43:34
    Reason: failed to convert java.lang.String to com.fasterxml.jackson.databind.SerializationFeature (caused by java.lang.IllegalArgumentException: No enum constant com.fasterxml.jackson.databind.SerializationFeature.write-date-times-as-timestamps)

Action:

Update your application's configuration. The following values are valid:

    CLOSE_CLOSEABLE
    EAGER_SERIALIZER_FETCH
    FAIL_ON_EMPTY_BEANS
    FAIL_ON_SELF_REFERENCES
    FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS
    FLUSH_AFTER_WRITE_VALUE
    INDENT_OUTPUT
    ORDER_MAP_ENTRIES_BY_KEYS
    USE_EQUALITY_FOR_OBJECT_ID
    WRAP_EXCEPTIONS
    WRAP_ROOT_VALUE
    WRITE_BIGDECIMAL_AS_PLAIN
    WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS
    WRITE_DATES_AS_TIMESTAMPS
    WRITE_DATES_WITH_CONTEXT_TIME_ZONE
    WRITE_DATES_WITH_ZONE_ID
    WRITE_DATE_KEYS_AS_TIMESTAMPS
    WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS
    WRITE_DURATIONS_AS_TIMESTAMPS
    WRITE_EMPTY_JSON_ARRAYS
    WRITE_ENUMS_USING_INDEX
    WRITE_ENUMS_USING_TO_STRING
    WRITE_ENUM_KEYS_USING_INDEX
    WRITE_NULL_MAP_VALUES
    WRITE_SELF_REFERENCES_AS_NULL
    WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED

2025-05-26 14:03:59,674 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@442612a6]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'routerFunctionMapping' defined in org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration: Failed to instantiate [org.springframework.web.servlet.function.support.RouterFunctionMapping]: Factory method 'routerFunctionMapping' threw exception with message: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapperBuilder' parameter 1: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.web.servlet.function.support.RouterFunctionMapping]: Factory method 'routerFunctionMapping' threw exception with message: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapperBuilder' parameter 1: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)
	... 101 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapper' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapper' parameter 0: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapperBuilder' parameter 1: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:224)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1489)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveNamedBean(DefaultListableBeanFactory.java:1450)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveBean(DefaultListableBeanFactory.java:516)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.getIfUnique(DefaultListableBeanFactory.java:468)
	at org.springframework.beans.factory.ObjectProvider.getIfUnique(ObjectProvider.java:167)
	at org.springframework.data.web.config.SpringDataWebConfiguration.extendMessageConverters(SpringDataWebConfiguration.java:158)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurerComposite.extendMessageConverters(WebMvcConfigurerComposite.java:145)
	at org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration.extendMessageConverters(DelegatingWebMvcConfiguration.java:124)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.getMessageConverters(WebMvcConfigurationSupport.java:858)
	at org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport.routerFunctionMapping(WebMvcConfigurationSupport.java:570)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)
	... 104 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'jacksonObjectMapperBuilder' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class]: Unsatisfied dependency expressed through method 'jacksonObjectMapperBuilder' parameter 1: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:354)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 128 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:804)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:546)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1883)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1847)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeanCollection(DefaultListableBeanFactory.java:1737)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1705)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1580)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 140 common frames omitted
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:99)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:79)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:423)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:601)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1631)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1519)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:913)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 158 common frames omitted
Caused by: org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'spring.jackson.serialization' to java.util.Map<com.fasterxml.jackson.databind.SerializationFeature, java.lang.Boolean>
	at org.springframework.boot.context.properties.bind.Binder.handleBindError(Binder.java:391)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:354)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindDataObject$5(Binder.java:477)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:100)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:88)
	at org.springframework.boot.context.properties.bind.JavaBeanBinder.bind(JavaBeanBinder.java:64)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindDataObject$6(Binder.java:480)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.AbstractList$RandomAccessSpliterator.tryAdvance(AbstractList.java:706)
	at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
	at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:527)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:513)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
	at org.springframework.boot.context.properties.bind.Binder.fromDataObjectBinders(Binder.java:488)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindDataObject$7(Binder.java:479)
	at org.springframework.boot.context.properties.bind.Binder$Context.withIncreasedDepth(Binder.java:597)
	at org.springframework.boot.context.properties.bind.Binder$Context.withDataObject(Binder.java:583)
	at org.springframework.boot.context.properties.bind.Binder.bindDataObject(Binder.java:479)
	at org.springframework.boot.context.properties.bind.Binder.bindObject(Binder.java:418)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:350)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:339)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:269)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:256)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:94)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:96)
	... 172 common frames omitted
Caused by: org.springframework.core.convert.ConversionFailedException: Failed to convert from type [java.lang.String] to type [com.fasterxml.jackson.databind.SerializationFeature] for value [write-date-times-as-timestamps]
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:47)
	at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:182)
	at org.springframework.boot.context.properties.bind.BindConverter.convert(BindConverter.java:110)
	at org.springframework.boot.context.properties.bind.BindConverter.convert(BindConverter.java:101)
	at org.springframework.boot.context.properties.bind.MapBinder$EntryBinder.bindEntries(MapBinder.java:171)
	at org.springframework.boot.context.properties.bind.MapBinder.bindAggregate(MapBinder.java:74)
	at org.springframework.boot.context.properties.bind.AggregateBinder.bind(AggregateBinder.java:56)
	at org.springframework.boot.context.properties.bind.Binder.lambda$bindAggregate$4(Binder.java:442)
	at org.springframework.boot.context.properties.bind.Binder$Context.withIncreasedDepth(Binder.java:597)
	at org.springframework.boot.context.properties.bind.Binder.bindAggregate(Binder.java:442)
	at org.springframework.boot.context.properties.bind.Binder.bindObject(Binder.java:403)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:350)
	... 198 common frames omitted
Caused by: java.lang.IllegalArgumentException: No enum constant com.fasterxml.jackson.databind.SerializationFeature.write-date-times-as-timestamps
	at org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter.findEnum(LenientObjectToEnumConverterFactory.java:93)
	at org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter.convert(LenientObjectToEnumConverterFactory.java:80)
	at org.springframework.boot.convert.LenientObjectToEnumConverterFactory$LenientToEnumConverter.convert(LenientObjectToEnumConverterFactory.java:61)
	at org.springframework.core.convert.support.GenericConversionService$ConverterFactoryAdapter.convert(GenericConversionService.java:409)
	at org.springframework.core.convert.support.ConversionUtils.invokeConverter(ConversionUtils.java:41)
	... 209 common frames omitted
2025-05-26 14:03:59,706 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@684138c5]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,712 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@5a637c4f]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,716 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@50ca509b]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,719 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@5166f042]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,722 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@45a824d]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,726 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@41e5038a]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,732 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@257ba195]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,737 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@530dd2d7]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,743 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@46e05384]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,748 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@2a70c8d5]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,761 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@2936f48a]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,766 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@23001753]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,773 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@27ae8ce3]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:03:59,779 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.support.DependencyInjectionTestExecutionListener] to prepare test instance [com.pruebaItx.acceptance.PriceAcceptanceTest@597050fa]
java.lang.IllegalStateException: ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@614da024 testClass = com.pruebaItx.acceptance.PriceAcceptanceTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true", "server.port=0"], contextCustomizers = [[ImportsContextCustomizer@4b76a0f4 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@46268f08, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@623e088f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2d96543c, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@584f54e6, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2dca0d64, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@74960bfa, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@72353731], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:145)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.injectDependencies(DependencyInjectionTestExecutionListener.java:142)
	at org.springframework.test.context.support.DependencyInjectionTestExecutionListener.prepareTestInstance(DependencyInjectionTestExecutionListener.java:98)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
2025-05-26 14:04:21,608 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 150928 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:04:21,611 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:04:21,612 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 14:04:24,122 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:04:24,128 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:04:25,326 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 14:04:25,327 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 14:04:25,508 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 4.232 seconds (process running for 5.342)
2025-05-26 14:04:25,511 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:04:25,894 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 14:04:25,895 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 14:04:25,955 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,004 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:04:26,102 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 14:04:26,103 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 14:04:26,104 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,106 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:04:26,125 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 14:04:26,147 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 14:04:26,164 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 14:04:26,181 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 14:04:26,198 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 14:04:26,216 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 14:04:26,234 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 14:04:26,234 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 14:04:26,235 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,238 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 14:04:26,238 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 14:04:26,253 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 14:04:26,253 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 14:04:26,254 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,256 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 14:04:26,257 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 14:04:26,271 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 14:04:26,272 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 14:04:26,273 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,276 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 14:04:26,291 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 14:04:26,291 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 14:04:26,292 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,293 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 14:04:26,307 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 14:04:26,307 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 14:04:26,308 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,310 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 14:04:26,327 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 14:04:26,327 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 14:04:26,329 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,332 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 14:04:26,347 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 14:04:26,347 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 14:04:26,348 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 14:04:26,350 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 14:04:26,388 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:46,286 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:46,288 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:46,288 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:48,743 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:48,750 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:50,023 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 3.997 seconds (process running for 5.072)
2025-05-26 14:11:50,026 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:50,320 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:50,381 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:50,381 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:50,382 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:50,690 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:50,691 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:50,902 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.568 seconds (process running for 5.951)
2025-05-26 14:11:50,903 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:50,919 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:50,976 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:50,976 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:50,977 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:51,249 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:51,250 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:51,471 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.529 seconds (process running for 6.52)
2025-05-26 14:11:51,473 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:51,494 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:51,558 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:51,558 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:51,558 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:51,788 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:51,788 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:51,980 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.454 seconds (process running for 7.029)
2025-05-26 14:11:51,982 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:52,000 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:52,049 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:52,049 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:52,050 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:52,309 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:52,310 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:52,505 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.496 seconds (process running for 7.554)
2025-05-26 14:11:52,507 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:52,524 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:52,579 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:52,580 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:52,580 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:52,832 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:52,833 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:53,001 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.463 seconds (process running for 8.049)
2025-05-26 14:11:53,001 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:53,012 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:53,046 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:53,046 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:53,047 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:53,264 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:53,265 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:53,418 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.4 seconds (process running for 8.467)
2025-05-26 14:11:53,419 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:53,430 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:53,477 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:53,477 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:53,477 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:53,681 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:53,685 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:53,842 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.389 seconds (process running for 8.891)
2025-05-26 14:11:53,843 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:53,857 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:53,909 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:53,909 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:53,909 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:54,107 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:54,108 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:54,256 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.377 seconds (process running for 9.305)
2025-05-26 14:11:54,257 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:54,270 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:54,323 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:54,323 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:54,323 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:54,495 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:54,496 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:54,657 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.36 seconds (process running for 9.706)
2025-05-26 14:11:54,658 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:54,667 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:54,723 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:54,723 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:54,723 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:54,898 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:54,899 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:55,035 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.338 seconds (process running for 10.084)
2025-05-26 14:11:55,036 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:55,050 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:55,087 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:55,087 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:55,088 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:55,254 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:55,254 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:55,405 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.337 seconds (process running for 10.454)
2025-05-26 14:11:55,406 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:55,418 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:55,446 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 154692 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:11:55,446 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:11:55,446 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 14:11:55,639 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:11:55,639 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:11:55,801 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.377 seconds (process running for 10.85)
2025-05-26 14:11:55,802 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:11:55,812 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:29:25,666 [main] INFO  c.p.PruebaItxApplicationTests - Starting PruebaItxApplicationTests using Java 17.0.15 with PID 163314 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:29:25,669 [main] DEBUG c.p.PruebaItxApplicationTests - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:29:25,670 [main] INFO  c.p.PruebaItxApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-05-26 14:29:28,189 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:29:28,195 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:29:29,526 [main] INFO  c.p.PruebaItxApplicationTests - Started PruebaItxApplicationTests in 4.15 seconds (process running for 5.331)
2025-05-26 14:29:29,529 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:29:29,845 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:30:34,166 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Starting PruebaItxApplication using Java 17.0.15 with PID 164273 (/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:30:34,167 [restartedMain] DEBUG com.pruebaItx.PruebaItxApplication - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:30:34,169 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-26 14:30:36,605 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:30:36,613 [restartedMain] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:30:37,666 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Started PruebaItxApplication in 3.868 seconds (process running for 5.411)
2025-05-26 14:30:37,669 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:30:45,188 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:34:56,092 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Starting PruebaItxApplication using Java 17.0.15 with PID 166632 (/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 14:34:56,096 [restartedMain] DEBUG com.pruebaItx.PruebaItxApplication - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 14:34:56,097 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-26 14:34:58,425 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 14:34:58,431 [restartedMain] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 14:34:59,646 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Started PruebaItxApplication in 3.938 seconds (process running for 5.081)
2025-05-26 14:34:59,650 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 14:35:20,283 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-26 14:35:20,284 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-05-26 14:35:20,295 [http-nio-8080-exec-2] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /prices
2025-05-26 14:35:20,298 [http-nio-8080-exec-2] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /prices.
2025-05-26 14:37:09,727 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 15:39:05,964 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Starting PruebaItxApplication using Java 17.0.15 with PID 171290 (/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 15:39:05,966 [restartedMain] DEBUG com.pruebaItx.PruebaItxApplication - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 15:39:05,967 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-26 15:39:07,995 [restartedMain] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 15:39:08,001 [restartedMain] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 15:39:08,918 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Started PruebaItxApplication in 3.233 seconds (process running for 4.155)
2025-05-26 15:39:08,921 [restartedMain] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 15:39:22,921 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-05-26 15:39:22,923 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-05-26 15:39:22,938 [http-nio-8080-exec-2] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /prices
2025-05-26 15:39:22,942 [http-nio-8080-exec-2] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /prices.
2025-05-26 15:40:41,046 [http-nio-8080-exec-5] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /prices
2025-05-26 15:40:41,047 [http-nio-8080-exec-5] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /prices.
2025-05-26 15:41:56,191 [http-nio-8080-exec-8] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T12:00, productId=35455, brandId=1
2025-05-26 15:41:56,191 [http-nio-8080-exec-8] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T12:00
2025-05-26 15:41:56,237 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:41:56,279 [http-nio-8080-exec-8] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 15:42:24,539 [http-nio-8080-exec-9] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 15:42:24,540 [http-nio-8080-exec-9] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 15:42:24,541 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:24,542 [http-nio-8080-exec-9] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 15:42:29,571 [http-nio-8080-exec-10] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 15:42:29,572 [http-nio-8080-exec-10] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 15:42:29,572 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:29,575 [http-nio-8080-exec-10] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 15:42:33,824 [http-nio-8080-exec-1] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 15:42:33,824 [http-nio-8080-exec-1] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 15:42:33,825 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:33,826 [http-nio-8080-exec-1] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 15:42:38,262 [http-nio-8080-exec-2] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 15:42:38,262 [http-nio-8080-exec-2] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 15:42:38,263 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:38,264 [http-nio-8080-exec-2] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 15:42:42,791 [http-nio-8080-exec-3] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 15:42:42,791 [http-nio-8080-exec-3] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 15:42:42,792 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:42,793 [http-nio-8080-exec-3] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 15:42:47,135 [http-nio-8080-exec-4] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 15:42:47,136 [http-nio-8080-exec-4] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 15:42:47,136 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:47,137 [http-nio-8080-exec-4] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 15:42:47,137 [http-nio-8080-exec-4] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99999, brandId=1. Reason: No price found for brand 1, product 99999 at date 2020-06-14T10:00
2025-05-26 15:42:52,858 [http-nio-8080-exec-5] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 15:42:52,858 [http-nio-8080-exec-5] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 15:42:52,859 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 15:42:52,860 [http-nio-8080-exec-5] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 15:42:52,860 [http-nio-8080-exec-5] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 15:43:09,353 [http-nio-8080-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 15:43:16,233 [http-nio-8080-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:11:16,118 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:37,832 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:37,834 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:37,835 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:42,535 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:42,551 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:45,376 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:45,378 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:45,427 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 8.469 seconds (process running for 15.947)
2025-05-26 16:11:45,432 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:45,596 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:45,767 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,791 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,792 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,794 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,795 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,797 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:45,801 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:45,801 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:45,832 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:45,894 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:45,895 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:45,895 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:46,248 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:46,249 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:46,498 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:46,499 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:46,509 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.667 seconds (process running for 17.029)
2025-05-26 16:11:46,510 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:46,518 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:46,522 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,524 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,525 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,526 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,527 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,528 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:46,532 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:46,533 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:46,545 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:46,596 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:46,596 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:46,596 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:46,975 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:46,976 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:47,182 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:47,183 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:47,193 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.638 seconds (process running for 17.714)
2025-05-26 16:11:47,195 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:47,212 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:47,217 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,218 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,220 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,221 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,222 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,223 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:47,226 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:47,227 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:47,236 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:47,315 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:47,315 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:47,315 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:47,628 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:47,629 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:47,987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:47,989 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:48,007 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.739 seconds (process running for 18.527)
2025-05-26 16:11:48,009 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:48,023 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:48,031 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,033 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,035 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,036 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,038 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,040 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,043 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:48,043 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:48,053 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:48,111 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:48,111 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:48,111 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:48,487 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:48,488 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:48,698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:48,699 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:48,709 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.65 seconds (process running for 19.229)
2025-05-26 16:11:48,710 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:48,718 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:48,722 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,724 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,725 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,727 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,728 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,729 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:48,731 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:48,731 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:48,739 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:48,793 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:48,793 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:48,794 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:49,096 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:49,097 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:49,282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:49,282 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:49,292 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.536 seconds (process running for 19.812)
2025-05-26 16:11:49,293 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:49,300 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:49,304 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,306 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,307 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,308 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,309 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,310 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,312 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:49,312 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:49,317 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:49,388 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:49,388 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:49,388 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:49,696 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:49,697 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:49,890 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:49,891 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:49,902 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.556 seconds (process running for 20.422)
2025-05-26 16:11:49,903 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:49,911 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:49,916 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,917 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,919 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,920 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,921 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,923 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:49,925 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:49,925 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:49,930 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:49,978 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:49,978 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:49,978 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:50,265 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:50,265 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:50,441 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:50,442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:50,458 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.522 seconds (process running for 20.979)
2025-05-26 16:11:50,460 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:50,470 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:50,473 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,474 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,475 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,477 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,478 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,479 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:50,482 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:50,482 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:50,489 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:50,539 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:50,539 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:50,539 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:50,790 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:50,791 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:50,994 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:50,994 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:51,003 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.492 seconds (process running for 21.523)
2025-05-26 16:11:51,004 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:51,012 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:51,016 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,019 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,020 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,021 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,023 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,024 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,026 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:51,026 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:51,031 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:51,071 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:51,071 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:51,071 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:51,319 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:51,319 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:51,470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:51,471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:51,479 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.441 seconds (process running for 21.999)
2025-05-26 16:11:51,480 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:51,486 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:51,490 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,491 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,493 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,494 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,494 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,495 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,497 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:51,497 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:51,501 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:51,561 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:51,562 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:51,562 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:51,800 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:51,801 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:51,973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:51,973 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:51,981 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.448 seconds (process running for 22.501)
2025-05-26 16:11:51,982 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:51,988 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:51,993 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,994 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,996 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,997 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,998 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:51,999 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,001 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:52,002 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:52,007 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:52,046 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:52,046 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:52,046 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:52,292 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:52,293 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:52,470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:52,470 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:52,478 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.456 seconds (process running for 22.998)
2025-05-26 16:11:52,479 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:52,485 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:52,488 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,489 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,490 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,492 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,493 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,494 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,496 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:52,497 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:52,501 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:52,530 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:52,530 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:52,530 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:52,757 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:52,757 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:52,921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:52,922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:52,929 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.423 seconds (process running for 23.449)
2025-05-26 16:11:52,930 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:52,937 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:52,942 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,943 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,945 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,946 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,947 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,949 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:52,950 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:52,951 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:52,956 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:53,003 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:53,003 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:53,003 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:53,222 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:53,223 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:53,389 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:53,390 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:53,396 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.421 seconds (process running for 23.917)
2025-05-26 16:11:53,397 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:53,403 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:53,406 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,407 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,408 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,409 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,410 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,410 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,412 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:53,412 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:53,415 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:53,445 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:53,445 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:53,445 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:53,648 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:53,649 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:53,820 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:53,821 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:53,829 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.407 seconds (process running for 24.35)
2025-05-26 16:11:53,830 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:53,838 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:53,842 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,845 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,846 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,847 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,848 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,849 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:53,851 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:53,851 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:53,855 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:53,894 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:53,894 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:53,894 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:54,151 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:54,152 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:54,369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:54,369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:54,377 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.506 seconds (process running for 24.897)
2025-05-26 16:11:54,378 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:54,384 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:54,387 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,389 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,390 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,391 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,391 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,392 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,394 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:54,394 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:54,398 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:54,452 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:54,452 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:54,452 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:54,658 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:54,659 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:54,822 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:54,823 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:11:54,831 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.4 seconds (process running for 25.351)
2025-05-26 16:11:54,831 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:54,837 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:54,841 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,843 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,844 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,844 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,845 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,846 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:54,848 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:54,848 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:54,852 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:54,912 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:54,913 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:54,913 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:55,112 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:55,113 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:55,265 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:55,266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:55,273 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.387 seconds (process running for 25.793)
2025-05-26 16:11:55,273 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:55,281 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:55,285 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,286 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,287 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,288 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,288 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,289 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,291 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:55,291 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:55,295 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:55,328 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:55,328 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:55,329 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:55,527 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:55,528 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:55,686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:55,687 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:55,694 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.388 seconds (process running for 26.214)
2025-05-26 16:11:55,695 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:55,700 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:55,703 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,704 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,705 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,706 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,706 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,707 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:55,708 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:55,709 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:55,712 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:55,749 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:55,749 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:55,749 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:11:55,963 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:55,964 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:56,098 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:56,098 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:56,105 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.381 seconds (process running for 26.626)
2025-05-26 16:11:56,106 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:56,112 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:11:56,114 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,115 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,116 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,117 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,117 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,118 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:11:56,119 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:11:56,119 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:11:56,123 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:56,150 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.pruebaItx.acceptance.PriceAcceptanceTest]: PriceAcceptanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-26 16:11:56,201 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 180296 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:11:56,201 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:11:56,201 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 16:11:56,805 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:11:56,805 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:11:56,929 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:11:56,929 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:11:57,175 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 1.013 seconds (process running for 27.695)
2025-05-26 16:11:57,176 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:11:57,307 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:11:57,310 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:11:57,346 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,352 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:11:57,534 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:11:57,534 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:11:57,536 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,538 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:11:57,557 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:11:57,566 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:11:57,573 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:11:57,582 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:11:57,590 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:11:57,598 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:11:57,605 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 16:11:57,605 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:11:57,606 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,607 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:11:57,607 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 16:11:57,617 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 16:11:57,617 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:11:57,617 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,618 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:11:57,619 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 16:11:57,628 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:11:57,628 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:11:57,629 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,631 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:11:57,643 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:11:57,643 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:11:57,644 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,646 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:11:57,658 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:11:57,659 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:11:57,660 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,661 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:11:57,675 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:11:57,675 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:11:57,676 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,678 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:11:57,690 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:11:57,691 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:11:57,691 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:11:57,693 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:11:57,875 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:27:28,722 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 188395 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:27:28,725 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:27:28,726 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:27:29,165 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'priceController' defined in file [/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes/com/pruebaItx/infrastructure/adapter/in/web/PriceController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-05-26 16:27:29,196 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.pruebaItx.infrastructure.adapter.in.web.PriceController required a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' that could not be found.


Action:

Consider defining a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' in your configuration.

2025-05-26 16:28:41,706 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 189045 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:28:41,708 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:28:41,709 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:28:42,214 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'priceController' defined in file [/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes/com/pruebaItx/infrastructure/adapter/in/web/PriceController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-05-26 16:28:42,239 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.pruebaItx.infrastructure.adapter.in.web.PriceController required a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' that could not be found.


Action:

Consider defining a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' in your configuration.

2025-05-26 16:30:48,774 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 190004 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:30:48,778 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:30:48,779 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:30:49,922 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'priceController' defined in file [/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes/com/pruebaItx/infrastructure/adapter/in/web/PriceController.class]: Unsatisfied dependency expressed through constructor parameter 0: No qualifying bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {}
2025-05-26 16:30:49,975 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Parameter 0 of constructor in com.pruebaItx.infrastructure.adapter.in.web.PriceController required a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' that could not be found.


Action:

Consider defining a bean of type 'com.pruebaItx.application.port.in.GetPriceUseCase' in your configuration.

2025-05-26 16:32:46,759 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 190959 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:32:46,763 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:32:46,764 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:32:50,112 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 4.096 seconds (process running for 6.823)
2025-05-26 16:32:50,119 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:32:50,239 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:32:50,250 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:32:50,375 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:32:50,377 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:33:25,698 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 191387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:33:25,700 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:33:25,701 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:33:28,515 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.134 seconds (process running for 4.179)
2025-05-26 16:33:28,520 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:33:28,595 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:33:28,603 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:33:40,569 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 191587 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:33:40,573 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:33:40,575 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:33:43,332 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.401 seconds (process running for 5.623)
2025-05-26 16:33:43,338 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:33:56,607 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 191823 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:33:56,610 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:33:56,612 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:33:58,942 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 2.908 seconds (process running for 5.033)
2025-05-26 16:33:58,947 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:37:15,684 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 193422 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:37:15,688 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:37:15,689 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:37:18,376 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.371 seconds (process running for 5.558)
2025-05-26 16:37:18,382 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:37:18,639 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:38:59,864 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:38:59,868 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:38:59,870 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:04,858 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:04,869 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:07,442 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:07,445 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 16:39:07,516 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 8.306 seconds (process running for 11.027)
2025-05-26 16:39:07,522 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:08,101 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:08,215 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,233 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,235 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,237 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,238 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,240 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:08,286 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:08,293 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:08,334 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:08,449 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:08,449 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:08,450 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:09,096 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:09,097 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:09,478 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:09,480 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:09,497 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.123 seconds (process running for 13.008)
2025-05-26 16:39:09,498 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:09,508 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:09,514 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,516 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,519 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,521 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,524 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,526 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:09,530 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:09,531 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:09,540 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:09,614 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:09,614 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:09,614 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:10,106 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:10,107 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:10,394 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:10,396 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:10,411 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.864 seconds (process running for 13.922)
2025-05-26 16:39:10,412 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:10,428 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:10,437 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,439 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,441 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,443 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,444 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,446 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:10,448 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:10,448 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:10,458 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:10,528 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:10,528 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:10,528 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:11,163 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:11,164 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:11,514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:11,515 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:11,530 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.062 seconds (process running for 15.041)
2025-05-26 16:39:11,531 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:11,546 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:11,555 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,558 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,560 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,563 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,565 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,568 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:11,572 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:11,573 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:11,587 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:11,786 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:11,786 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:11,787 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:12,291 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:12,292 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:12,621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:12,623 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:12,638 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.027 seconds (process running for 16.149)
2025-05-26 16:39:12,640 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:12,652 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:12,658 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,661 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,662 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,664 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,665 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,667 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:12,670 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:12,671 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:12,679 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:12,737 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:12,738 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:12,738 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:13,188 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:13,190 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:13,464 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:13,465 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:39:13,478 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.792 seconds (process running for 16.989)
2025-05-26 16:39:13,479 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:13,490 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:13,495 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,496 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,498 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,499 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,501 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,502 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:13,505 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:13,505 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:13,512 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:13,578 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:13,579 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:13,579 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:14,041 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:14,042 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:14,292 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:14,294 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:14,308 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.789 seconds (process running for 17.819)
2025-05-26 16:39:14,309 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:14,319 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:14,324 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,326 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,328 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,329 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,330 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,331 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:14,333 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:14,334 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:14,340 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:14,408 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:14,409 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:14,409 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:14,899 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:14,900 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:15,190 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:15,191 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:15,204 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.842 seconds (process running for 18.715)
2025-05-26 16:39:15,206 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:15,215 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:15,220 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,222 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,224 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,225 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,226 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,228 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:15,230 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:15,231 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:15,240 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:15,298 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:15,299 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:15,299 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:15,790 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:15,791 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:16,121 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:16,123 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:16,135 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.887 seconds (process running for 19.646)
2025-05-26 16:39:16,137 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:16,148 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:16,154 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,156 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,157 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,159 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,161 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,163 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,165 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:16,166 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:16,174 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:16,220 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:16,221 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:16,221 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:16,621 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:16,622 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:16,867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:16,869 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 16:39:16,884 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.703 seconds (process running for 20.395)
2025-05-26 16:39:16,885 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:16,896 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:16,900 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,902 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,903 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,904 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,905 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,906 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:16,908 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:16,908 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:16,915 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:16,977 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:16,977 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:16,978 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:17,389 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:17,390 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:17,629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:17,630 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:39:17,642 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.708 seconds (process running for 21.153)
2025-05-26 16:39:17,643 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:17,651 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:17,655 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,656 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,657 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,658 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,659 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,659 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:17,661 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:17,661 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:17,667 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:17,721 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:17,721 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:17,721 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:18,121 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:18,122 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:18,370 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:18,371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:18,385 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.703 seconds (process running for 21.896)
2025-05-26 16:39:18,387 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:18,395 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:18,399 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,400 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,401 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,403 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,404 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,406 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:18,408 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:18,408 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:18,414 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:18,491 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:18,491 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:18,492 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:18,831 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:18,833 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:19,055 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:19,056 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:19,068 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.619 seconds (process running for 22.579)
2025-05-26 16:39:19,069 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:19,080 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:19,083 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,085 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,086 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,087 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,088 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,089 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,091 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:19,091 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:19,099 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:19,163 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:19,163 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:19,163 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:19,550 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:19,551 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:19,744 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:19,745 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:19,756 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.633 seconds (process running for 23.266)
2025-05-26 16:39:19,756 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:19,763 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:19,767 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,768 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,769 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,770 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,770 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,771 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:19,773 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:19,773 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:19,778 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:19,848 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:19,848 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:19,848 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:20,201 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:20,202 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:20,415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:20,416 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:20,426 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.625 seconds (process running for 23.937)
2025-05-26 16:39:20,427 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:20,436 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:20,441 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,443 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,444 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,445 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,446 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,447 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:20,448 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:20,449 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:20,455 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:20,539 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:20,539 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:20,540 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:20,900 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:20,900 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:21,225 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:21,226 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:21,238 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.746 seconds (process running for 24.749)
2025-05-26 16:39:21,239 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:21,249 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:21,254 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,256 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,257 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,258 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,258 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,259 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,262 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:21,262 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:21,269 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:21,313 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:21,314 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:21,314 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:21,677 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:21,679 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:21,967 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:21,968 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:21,985 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.71 seconds (process running for 25.496)
2025-05-26 16:39:21,986 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:21,993 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:21,997 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:21,999 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,000 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,001 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,002 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,003 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,004 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:22,005 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:22,010 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:22,057 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:22,057 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:22,057 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:22,405 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:22,406 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:22,659 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:22,660 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:39:22,674 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.654 seconds (process running for 26.185)
2025-05-26 16:39:22,675 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:22,687 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:22,691 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,692 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,693 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,694 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,695 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,696 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:22,697 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:22,698 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:22,704 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:22,745 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:22,745 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:22,745 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:23,114 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:23,115 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:23,310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:23,310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:39:23,321 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.609 seconds (process running for 26.832)
2025-05-26 16:39:23,322 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:23,329 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:23,333 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,334 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,335 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,335 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,336 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,337 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:23,338 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:23,338 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:23,343 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:23,394 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 194364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:39:23,394 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:39:23,394 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:39:23,763 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:39:23,764 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:39:23,986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:39:23,987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:39:23,998 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.637 seconds (process running for 27.509)
2025-05-26 16:39:23,999 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:39:24,008 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:39:24,014 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,015 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,016 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,017 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,019 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,020 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:39:24,022 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:39:24,023 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:39:24,028 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:41:10,002 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 195508 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:41:10,005 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:41:10,007 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:41:12,548 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.207 seconds (process running for 5.403)
2025-05-26 16:41:12,554 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:41:12,647 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /price
2025-05-26 16:41:12,658 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /price.
2025-05-26 16:41:51,316 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 195957 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:41:51,318 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:41:51,319 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:41:53,197 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 2.315 seconds (process running for 3.965)
2025-05-26 16:41:53,201 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:41:53,257 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:41:53,265 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:15,313 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:15,315 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:15,316 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:18,890 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:18,897 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:20,985 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:20,986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:21,032 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.144 seconds (process running for 7.286)
2025-05-26 16:42:21,036 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:21,488 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:21,565 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,579 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,580 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,581 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,583 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,584 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:21,611 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:21,616 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:21,640 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:21,740 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:21,740 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:21,741 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:22,183 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:22,184 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:22,476 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:22,477 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:22,490 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.828 seconds (process running for 8.743)
2025-05-26 16:42:22,491 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:22,501 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:22,506 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,508 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,510 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,511 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,513 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,514 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:22,516 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:22,517 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:22,524 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:22,588 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:22,589 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:22,589 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:22,966 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:22,967 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:23,247 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:23,248 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:23,258 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.727 seconds (process running for 9.512)
2025-05-26 16:42:23,259 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:23,269 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:23,275 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,277 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,279 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,282 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,285 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,287 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:23,290 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:23,290 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:23,300 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:23,350 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:23,350 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:23,350 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:23,714 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:23,716 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:24,015 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:24,016 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:24,032 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.725 seconds (process running for 10.285)
2025-05-26 16:42:24,033 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:24,047 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:24,053 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,055 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,057 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,059 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,062 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,064 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,068 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:24,068 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:24,077 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:24,133 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:24,134 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:24,134 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:24,482 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:24,483 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:24,698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:24,698 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:42:24,709 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.623 seconds (process running for 10.962)
2025-05-26 16:42:24,710 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:24,720 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:24,725 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,727 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,729 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,730 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,732 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,733 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:24,736 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:24,736 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:24,742 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:24,804 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:24,805 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:24,805 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:25,115 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:25,116 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:25,309 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:25,310 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:25,319 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.566 seconds (process running for 11.573)
2025-05-26 16:42:25,320 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:25,328 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:25,332 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,334 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,336 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,338 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,339 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,341 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,343 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:25,343 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:25,349 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:25,404 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:25,404 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:25,404 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:25,713 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:25,714 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:25,922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:25,923 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:25,944 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.576 seconds (process running for 12.198)
2025-05-26 16:42:25,946 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:25,958 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:25,962 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,964 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,965 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,966 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,968 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,969 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:25,971 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:25,972 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:25,978 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:26,046 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:26,046 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:26,046 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:26,350 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:26,351 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:26,513 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:26,514 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:26,523 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.509 seconds (process running for 12.776)
2025-05-26 16:42:26,524 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:26,532 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:26,537 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,538 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,539 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,540 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,541 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,542 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:26,544 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:26,544 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:26,549 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:26,610 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:26,610 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:26,611 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:26,867 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:26,868 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:27,094 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:27,095 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:42:27,111 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.541 seconds (process running for 13.364)
2025-05-26 16:42:27,112 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:27,123 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:27,127 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,129 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,130 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,131 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,132 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,133 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,135 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:27,136 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:27,143 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:27,190 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:27,190 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:27,190 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:27,446 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:27,447 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:27,629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:27,630 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:27,639 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.486 seconds (process running for 13.892)
2025-05-26 16:42:27,640 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:27,647 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:27,650 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,652 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,653 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,653 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,654 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,655 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:27,657 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:27,658 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:27,662 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:27,696 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:27,696 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:27,696 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:28,006 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:28,007 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:28,215 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:28,216 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:28,230 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.563 seconds (process running for 14.483)
2025-05-26 16:42:28,231 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:28,241 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:28,245 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,247 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,248 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,250 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,251 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,252 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,254 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:28,255 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:28,261 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:28,325 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:28,325 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:28,325 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:28,648 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:28,650 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:28,864 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:28,865 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:28,879 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.585 seconds (process running for 15.132)
2025-05-26 16:42:28,880 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:28,891 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:28,896 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,898 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,900 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,902 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,903 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,905 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:28,908 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:28,909 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:28,916 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:28,960 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:28,960 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:28,961 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:29,232 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:29,233 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:29,414 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:29,415 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:29,424 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.498 seconds (process running for 15.678)
2025-05-26 16:42:29,425 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:29,433 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:29,437 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,439 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,440 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,442 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,443 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,444 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,446 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:29,447 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:29,452 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:29,489 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:29,489 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:29,489 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:29,708 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:29,708 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:29,885 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:29,886 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:29,898 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.439 seconds (process running for 16.152)
2025-05-26 16:42:29,900 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:29,912 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:29,917 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,919 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,920 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,921 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,922 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,924 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:29,926 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:29,927 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:29,938 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:30,018 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:30,018 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:30,018 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:30,330 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:30,331 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:30,569 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:30,570 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:30,583 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.609 seconds (process running for 16.837)
2025-05-26 16:42:30,585 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:30,595 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:30,600 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,601 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,603 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,604 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,605 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,606 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:30,608 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:30,609 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:30,616 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:30,721 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:30,724 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:30,724 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:31,243 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:31,245 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:31,527 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:31,528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:31,544 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.882 seconds (process running for 17.797)
2025-05-26 16:42:31,546 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:31,557 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:31,562 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,564 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,565 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,566 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,567 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,568 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:31,570 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:31,571 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:31,577 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:31,618 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:31,618 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:31,619 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:31,842 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:31,843 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:31,980 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:31,981 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:42:31,990 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.408 seconds (process running for 18.243)
2025-05-26 16:42:31,990 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:31,998 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:32,002 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,003 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,004 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,005 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,006 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,007 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,009 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:32,009 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:32,014 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:32,068 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:32,069 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:32,070 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:32,278 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:32,278 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:32,417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:32,418 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:32,426 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.391 seconds (process running for 18.68)
2025-05-26 16:42:32,427 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:32,434 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:32,437 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,438 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,439 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,440 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,441 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,441 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,443 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:32,443 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:32,447 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:32,504 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:32,504 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:32,504 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:32,714 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:32,715 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:32,860 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:32,861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:42:32,869 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.395 seconds (process running for 19.122)
2025-05-26 16:42:32,869 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:32,876 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:32,879 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,880 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,881 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,882 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,882 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,883 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:32,885 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:32,885 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:32,890 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:32,948 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 196244 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:42:32,948 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:42:32,948 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:42:33,161 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:42:33,161 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:42:33,291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:42:33,291 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:42:33,299 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.38 seconds (process running for 19.552)
2025-05-26 16:42:33,299 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:42:33,305 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:42:33,307 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,309 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,310 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,310 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,311 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,311 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:42:33,313 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:42:33,313 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:42:33,317 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:11,894 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:11,896 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:11,897 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:14,766 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:14,775 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:16,369 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:16,371 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:16,414 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 4.878 seconds (process running for 6.564)
2025-05-26 16:45:16,417 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:16,823 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:16,897 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:16,909 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:16,911 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:16,912 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:16,913 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:16,914 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:17,029 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 16:45:17,030 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:45:17,069 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:17,071 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:17,071 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:17,072 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:17,074 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:17,079 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:45:17,080 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 16:45:17,160 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:17,244 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:17,244 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:17,244 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:17,754 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:17,755 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:18,053 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:18,055 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:18,069 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.89 seconds (process running for 8.218)
2025-05-26 16:45:18,070 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:18,078 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:18,082 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,084 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,085 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,086 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,087 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,088 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,095 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:45:18,099 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:45:18,101 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:45:18,110 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:18,156 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:18,156 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:18,156 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:18,498 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:18,499 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:18,721 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:18,722 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:18,733 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.617 seconds (process running for 8.883)
2025-05-26 16:45:18,734 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:18,742 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:18,746 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,748 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,749 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,751 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,752 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,753 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:18,777 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:45:18,778 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:45:18,782 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:18,782 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:18,783 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:18,783 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:18,784 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:18,786 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:45:18,862 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:18,902 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:18,902 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:18,902 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:19,221 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:19,221 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:19,418 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:19,419 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:19,430 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.563 seconds (process running for 9.579)
2025-05-26 16:45:19,431 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:19,439 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:19,446 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,448 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,449 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,450 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,452 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,453 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:19,471 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:19,471 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:19,474 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:19,475 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:19,475 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:19,475 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:19,476 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:19,478 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:19,488 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:19,540 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:19,541 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:19,541 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:19,867 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:19,868 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:20,104 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:20,105 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:20,114 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.608 seconds (process running for 10.264)
2025-05-26 16:45:20,115 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:20,123 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:20,127 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,128 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,129 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,130 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,131 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,131 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,147 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 16:45:20,147 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:20,150 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,151 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,151 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,151 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,152 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:20,154 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:20,154 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 16:45:20,163 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:20,231 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:20,231 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:20,231 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:20,556 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:20,557 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:20,768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:20,769 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:45:20,779 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.586 seconds (process running for 10.929)
2025-05-26 16:45:20,780 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:20,789 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:20,793 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,794 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,795 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,797 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,798 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,799 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:20,814 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 16:45:20,814 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 16:45:20,818 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,818 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,818 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,818 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:20,819 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:20,820 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 16:45:20,830 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:20,897 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:20,897 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:20,897 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:21,199 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:21,200 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:21,421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:21,421 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:45:21,431 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.567 seconds (process running for 11.58)
2025-05-26 16:45:21,432 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:21,440 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:21,444 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,445 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,447 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,449 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,450 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,451 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:21,467 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:45:21,467 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:45:21,469 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:21,470 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:21,470 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:21,470 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:21,471 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:21,472 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:45:21,480 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:21,543 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:21,544 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:21,544 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:21,848 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:21,849 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:22,091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:22,091 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:45:22,102 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.589 seconds (process running for 12.251)
2025-05-26 16:45:22,103 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:22,112 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:22,117 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,118 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,119 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,119 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,120 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,121 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,129 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:45:22,135 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:22,199 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:22,199 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:22,199 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:22,491 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:22,491 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:22,669 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:22,670 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:22,681 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.515 seconds (process running for 12.83)
2025-05-26 16:45:22,682 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:22,690 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:22,694 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,696 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,697 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,698 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,699 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,700 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:22,715 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:45:22,716 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:45:22,718 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:22,719 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:22,719 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:22,719 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:22,720 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:22,721 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:45:22,730 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:22,770 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:22,770 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:22,770 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:23,046 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:23,047 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:23,243 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:23,244 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:23,253 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.515 seconds (process running for 13.403)
2025-05-26 16:45:23,254 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:23,261 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:23,265 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,267 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,269 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,270 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,282 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 16:45:23,282 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 16:45:23,284 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,285 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,285 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,285 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,286 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:23,287 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:23,294 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:23,333 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:23,333 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:23,333 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:23,597 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:23,598 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:23,776 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:23,777 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:23,786 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.485 seconds (process running for 13.935)
2025-05-26 16:45:23,787 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:23,799 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:23,804 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,805 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,806 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,807 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,808 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,809 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:23,826 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 16:45:23,827 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:45:23,830 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,831 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,831 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,831 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:23,832 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:23,833 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:45:23,833 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 16:45:23,844 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:23,886 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:23,886 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:23,886 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:24,156 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:24,157 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:24,340 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:24,341 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:24,351 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.493 seconds (process running for 14.501)
2025-05-26 16:45:24,353 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:24,362 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:24,364 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,366 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,366 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,367 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,367 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,368 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,380 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:45:24,380 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:45:24,382 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,383 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,383 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,383 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,384 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:24,385 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:45:24,392 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:24,441 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:24,441 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:24,441 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:24,708 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:24,709 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:24,888 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:24,889 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:24,899 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.483 seconds (process running for 15.048)
2025-05-26 16:45:24,900 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:24,908 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:24,915 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,918 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,920 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,923 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,925 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,926 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:24,939 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:45:24,939 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:45:24,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,942 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:24,942 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:24,943 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:45:24,951 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:24,998 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:24,998 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:24,998 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:25,282 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:25,284 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:25,468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:25,469 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:25,487 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.52 seconds (process running for 15.636)
2025-05-26 16:45:25,488 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:25,499 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:25,503 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,504 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,506 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,507 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,507 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,508 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:25,520 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:45:25,520 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:45:25,523 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:25,523 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:25,523 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:25,523 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:25,524 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:25,525 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:45:25,538 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:25,601 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:25,601 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:25,602 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:25,854 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:25,855 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:26,035 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:26,036 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:26,045 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.476 seconds (process running for 16.194)
2025-05-26 16:45:26,045 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:26,052 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:26,055 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,056 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,057 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,058 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,059 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,059 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,071 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:45:26,072 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:45:26,074 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:26,075 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:26,075 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:26,075 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:26,076 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:26,077 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:26,084 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:26,146 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:26,146 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:26,146 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:26,426 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:26,426 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:26,650 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:26,651 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:26,662 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.547 seconds (process running for 16.812)
2025-05-26 16:45:26,663 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:26,672 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:26,675 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,676 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,677 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,678 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,678 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,679 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:26,692 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:45:26,696 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:45:26,701 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:26,759 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:26,759 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:26,759 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:27,002 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:27,003 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:27,157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:27,157 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:45:27,166 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.443 seconds (process running for 17.316)
2025-05-26 16:45:27,167 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:27,173 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:27,176 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,177 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,178 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,178 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,179 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,179 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,190 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:27,190 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:45:27,192 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,193 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,193 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,193 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,193 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:27,194 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:45:27,195 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 16:45:27,200 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:27,250 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:27,250 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:27,250 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:27,491 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:27,492 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:27,644 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:27,645 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:27,653 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.426 seconds (process running for 17.802)
2025-05-26 16:45:27,653 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:27,660 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:27,663 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,664 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,665 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,665 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,666 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,666 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:27,677 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 16:45:27,677 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:27,679 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,679 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,679 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,679 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:27,680 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:27,681 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 16:45:27,687 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:27,745 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:27,745 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:27,745 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:27,991 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:27,992 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:28,151 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:28,152 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:28,159 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.441 seconds (process running for 18.309)
2025-05-26 16:45:28,160 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:28,166 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:28,169 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,171 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,172 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,172 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,173 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,174 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,186 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,186 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,188 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,189 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,189 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,189 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,189 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,190 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,195 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,195 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,196 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,197 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,199 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,199 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,200 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,201 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,204 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,204 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,204 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,205 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,207 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,208 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,208 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,209 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,212 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,212 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,212 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,214 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,218 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,218 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,219 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,220 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,223 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,223 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,224 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,224 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,227 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,227 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,227 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,228 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,230 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:45:28,230 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:45:28,231 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,232 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:45:28,237 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:28,262 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 197740 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:45:28,262 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:45:28,263 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:45:28,477 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:45:28,478 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:45:28,628 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:45:28,629 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:45:28,636 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.395 seconds (process running for 18.786)
2025-05-26 16:45:28,637 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:45:28,643 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:45:28,645 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,646 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,647 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,647 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,647 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,648 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:45:28,658 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:45:28,658 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:45:28,660 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,661 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,661 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,661 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:45:28,661 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:45:28,662 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:45:28,668 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:30,104 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:30,106 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:30,107 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:33,412 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:33,421 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:35,135 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:35,137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 16:47:35,183 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.483 seconds (process running for 7.4)
2025-05-26 16:47:35,186 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:35,629 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:35,712 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,725 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,727 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,728 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,730 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,731 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:35,858 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 16:47:35,858 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:47:35,915 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:35,918 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:35,919 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:35,919 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:35,924 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:35,931 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:47:35,932 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 16:47:36,004 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 16:47:36,004 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:36,006 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:36,007 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:36,007 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 16:47:36,025 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:36,096 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:36,096 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:36,096 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:36,686 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:36,686 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:37,076 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:37,077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:37,098 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.053 seconds (process running for 9.316)
2025-05-26 16:47:37,100 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:37,112 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:37,119 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,121 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,123 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,124 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,126 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,128 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:37,137 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:47:37,142 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:47:37,146 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:47:37,159 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:37,230 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:37,230 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:37,231 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:37,769 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:37,770 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:38,057 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:38,058 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:38,069 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.901 seconds (process running for 10.287)
2025-05-26 16:47:38,071 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:38,079 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:38,083 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,085 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,086 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,088 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,089 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,090 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,116 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:47:38,116 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:47:38,121 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,123 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,124 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:38,129 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:47:38,217 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:38,274 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:38,275 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:38,275 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:38,646 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:38,647 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:38,866 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:38,867 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:38,878 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.648 seconds (process running for 11.096)
2025-05-26 16:47:38,879 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:38,888 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:38,893 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,894 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,896 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,897 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,898 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,899 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:38,923 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:38,923 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:38,926 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,927 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,928 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,928 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:38,929 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:38,932 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:38,949 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:39,023 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:39,024 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:39,024 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:39,409 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:39,410 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:39,703 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:39,704 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:39,713 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.739 seconds (process running for 11.931)
2025-05-26 16:47:39,714 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:39,723 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:39,729 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,731 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,733 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,735 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,736 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,738 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:39,761 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 16:47:39,761 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:39,765 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:39,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:39,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:39,767 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:39,768 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:39,770 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:39,771 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 16:47:39,787 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:39,841 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:39,841 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:39,841 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:40,226 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:40,227 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:40,481 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:40,482 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:40,493 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.7 seconds (process running for 12.71)
2025-05-26 16:47:40,494 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:40,502 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:40,506 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,508 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,509 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,511 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,512 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,514 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:40,534 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 16:47:40,534 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 16:47:40,538 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:40,539 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:40,539 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:40,540 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:40,541 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:40,543 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 16:47:40,554 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:40,607 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:40,607 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:40,608 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:40,966 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:40,967 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:41,228 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:41,229 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:41,240 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.68 seconds (process running for 13.458)
2025-05-26 16:47:41,241 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:41,249 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:41,253 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,254 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,255 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,256 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,257 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,258 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:41,274 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:47:41,274 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:47:41,277 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:41,278 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:41,278 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:41,278 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:41,279 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:41,281 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:41,295 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:41,387 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:41,387 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:41,387 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:41,905 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:41,906 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:42,199 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:42,200 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:42,212 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.898 seconds (process running for 14.43)
2025-05-26 16:47:42,214 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:42,224 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:42,230 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,232 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,233 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,234 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,235 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,237 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:42,248 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:47:42,255 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:42,329 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:42,330 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:42,331 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:42,919 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:42,920 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:43,236 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:43,238 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:43,251 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.989 seconds (process running for 15.469)
2025-05-26 16:47:43,253 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:43,273 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:43,278 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,281 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,283 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,284 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,286 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,289 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:43,316 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:43,316 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:43,322 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:43,323 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:43,323 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:43,324 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:43,325 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:43,327 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:43,344 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:43,405 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:43,406 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:43,406 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:43,900 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:43,901 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:44,128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:44,128 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:44,140 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.788 seconds (process running for 16.357)
2025-05-26 16:47:44,141 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:44,149 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:44,152 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,154 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,155 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,156 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,157 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,157 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,172 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 16:47:44,172 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 16:47:44,175 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,176 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,176 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,177 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,178 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:44,179 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:44,188 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:44,231 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:44,232 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:44,232 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:44,538 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:44,539 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:44,710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:44,710 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:44,721 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.524 seconds (process running for 16.938)
2025-05-26 16:47:44,721 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:44,729 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:44,733 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,735 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,736 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,737 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,738 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,739 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:44,752 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 16:47:44,752 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:47:44,756 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,756 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,756 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,757 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:44,758 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:44,759 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:47:44,759 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 16:47:44,766 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:44,810 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:44,810 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:44,811 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:45,080 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:45,081 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:45,257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:45,258 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:45,272 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.49 seconds (process running for 17.49)
2025-05-26 16:47:45,273 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:45,280 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:45,283 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,284 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,285 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,286 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,286 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,287 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,301 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:45,301 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:45,305 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,307 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:45,310 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:45,321 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:45,364 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:45,365 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:45,365 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:45,651 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:45,652 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:45,830 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:45,831 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:45,839 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.507 seconds (process running for 18.057)
2025-05-26 16:47:45,840 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:45,846 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:45,849 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,850 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,851 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,852 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,853 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,853 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:45,865 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:47:45,865 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:47:45,868 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,868 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,868 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,869 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:45,869 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:45,870 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:45,879 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:45,947 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:45,947 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:45,947 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:46,211 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:46,211 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:46,448 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:46,451 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:46,471 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.563 seconds (process running for 18.689)
2025-05-26 16:47:46,472 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:46,482 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:46,489 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,490 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,496 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,497 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,498 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,499 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:46,540 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:47:46,540 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:47:46,548 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:46,548 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:46,549 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:46,549 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:46,549 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:46,551 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:47:46,567 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:46,622 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:46,622 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:46,622 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:47,060 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:47,061 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:47,256 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:47,257 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:47,272 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.692 seconds (process running for 19.49)
2025-05-26 16:47:47,273 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:47,286 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:47,291 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,293 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,296 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,298 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,299 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,301 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,320 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:47:47,320 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:47:47,324 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:47,324 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:47,324 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:47,324 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:47,325 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:47,327 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:47,336 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:47,401 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:47,401 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:47,401 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:47,711 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:47,712 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:47,941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:47,942 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:47,951 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.599 seconds (process running for 20.168)
2025-05-26 16:47:47,952 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:47,960 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:47,963 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,965 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,966 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,966 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,967 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,968 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:47,971 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:47:47,973 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:47:47,977 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:48,026 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:48,026 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:48,026 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:48,270 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:48,270 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:48,453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:48,453 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:48,466 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.468 seconds (process running for 20.683)
2025-05-26 16:47:48,467 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:48,474 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:48,478 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,480 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,481 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,482 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,484 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,485 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,496 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:48,496 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:47:48,499 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,499 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,499 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,499 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,500 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:48,501 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:47:48,501 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 16:47:48,507 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:48,551 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:48,552 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:48,552 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:48,781 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:48,781 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:48,940 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:48,941 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:48,949 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.423 seconds (process running for 21.166)
2025-05-26 16:47:48,949 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:48,956 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:48,959 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,960 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,961 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,962 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,963 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,964 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:48,975 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 16:47:48,975 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:48,977 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,977 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,978 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,978 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:48,978 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:48,979 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 16:47:48,986 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:49,036 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:49,036 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:49,037 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:49,260 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:49,260 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:49,445 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:49,446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:47:49,454 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.446 seconds (process running for 21.672)
2025-05-26 16:47:49,455 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:49,461 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:49,465 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,466 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,467 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,468 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,468 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,469 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:49,480 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,480 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,483 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:49,483 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:49,483 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:49,483 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:49,484 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,485 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,489 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,489 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,490 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,491 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,493 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,493 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,494 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,495 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,497 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,497 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,498 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,498 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,501 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,501 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,501 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,502 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,505 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,505 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,505 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,506 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,509 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,509 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,510 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,511 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,514 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,515 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,516 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,516 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,521 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,521 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,522 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,522 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,526 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:47:49,526 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:47:49,526 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:49,527 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:47:49,534 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:49,565 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 198905 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:47:49,565 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:47:49,565 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:47:49,837 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:47:49,840 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:47:50,081 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:47:50,082 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:47:50,095 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.553 seconds (process running for 22.313)
2025-05-26 16:47:50,096 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:47:50,104 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:47:50,109 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,110 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,112 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,113 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,114 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,115 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:47:50,131 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:50,132 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:50,135 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:50,135 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:50,135 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:50,135 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:47:50,136 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:50,138 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:50,144 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:50,144 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:50,145 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:50,146 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:50,149 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:50,149 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:50,150 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:50,151 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:50,155 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:50,155 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:50,156 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:50,157 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:50,160 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:47:50,161 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:47:50,161 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:47:50,162 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:47:50,170 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:22,535 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:22,537 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:22,537 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:25,368 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:25,377 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:27,132 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:27,134 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 16:51:27,175 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 4.982 seconds (process running for 7.122)
2025-05-26 16:51:27,178 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:27,552 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:27,626 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,637 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,638 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,639 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,640 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,641 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:27,765 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 16:51:27,766 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:51:27,812 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:27,814 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:27,815 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:27,816 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:27,821 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:27,830 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:51:27,831 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 16:51:27,913 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 16:51:27,913 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:27,915 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:27,916 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:27,916 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 16:51:27,931 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:28,002 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:28,002 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:28,002 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:28,407 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:28,408 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:28,686 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:28,687 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:28,701 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.754 seconds (process running for 8.648)
2025-05-26 16:51:28,702 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:28,712 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:28,717 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,718 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,719 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,721 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,721 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,722 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:28,729 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:51:28,733 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:51:28,735 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:51:28,743 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:28,794 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:28,794 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:28,794 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:29,127 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:29,128 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:29,358 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:29,359 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:29,370 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.621 seconds (process running for 9.317)
2025-05-26 16:51:29,371 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:29,381 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:29,384 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,386 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,388 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,389 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,390 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,391 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:29,411 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:51:29,412 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:51:29,415 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:29,415 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:29,415 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:29,415 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:29,416 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:29,419 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:51:29,478 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:29,523 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:29,523 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:29,523 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:29,834 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:29,835 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:30,026 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:30,027 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:30,037 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.551 seconds (process running for 9.984)
2025-05-26 16:51:30,038 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:30,046 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:30,051 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,053 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,054 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,055 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,056 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,057 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,080 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:30,081 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:30,084 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,085 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,085 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,085 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,086 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:30,087 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:30,097 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:30,147 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:30,148 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:30,148 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:30,430 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:30,431 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:30,631 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:30,632 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:30,643 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.528 seconds (process running for 10.59)
2025-05-26 16:51:30,644 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:30,651 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:30,656 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,658 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,659 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,660 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,661 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,663 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:30,682 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 16:51:30,682 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:30,685 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,686 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,686 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,686 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:30,687 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:30,688 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:30,689 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 16:51:30,700 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:30,747 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:30,748 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:30,748 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:31,025 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:31,025 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:31,208 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:31,209 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:31,218 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.51 seconds (process running for 11.165)
2025-05-26 16:51:31,219 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:31,228 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:31,231 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,232 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,233 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,234 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,235 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,236 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,248 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 16:51:31,249 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 16:51:31,251 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,252 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,252 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,252 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,253 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:31,254 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 16:51:31,263 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:31,304 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:31,304 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:31,304 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:31,570 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:31,571 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:31,749 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:31,750 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:31,760 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.488 seconds (process running for 11.707)
2025-05-26 16:51:31,762 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:31,772 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:31,775 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,776 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,777 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,778 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,779 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,780 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:31,794 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:51:31,794 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:51:31,797 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,797 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,797 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,797 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:31,798 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:31,799 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:31,807 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:31,854 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:31,855 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:31,855 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:32,117 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:32,118 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:32,318 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:32,319 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:32,328 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.504 seconds (process running for 12.275)
2025-05-26 16:51:32,329 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:32,337 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:32,340 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,342 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,342 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,343 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,344 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,344 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,351 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:51:32,356 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:32,408 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:32,408 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:32,408 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:32,671 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:32,672 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:32,859 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:32,860 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:32,870 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.496 seconds (process running for 12.817)
2025-05-26 16:51:32,871 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:32,879 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:32,883 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,884 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,885 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,886 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,887 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,887 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:32,900 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:32,901 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:32,903 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:32,904 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:32,904 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:32,904 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:32,905 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:32,906 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:32,913 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:32,951 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:32,952 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:32,952 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:33,222 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:33,222 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:33,392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:33,393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:33,402 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.48 seconds (process running for 13.349)
2025-05-26 16:51:33,403 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:33,410 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:33,413 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,415 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,416 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,417 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,418 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,418 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,431 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 16:51:33,431 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 16:51:33,433 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,434 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,434 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,434 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,434 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:33,435 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:33,443 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:33,501 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:33,501 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:33,501 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:33,758 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:33,759 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:33,926 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:33,927 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:33,935 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.466 seconds (process running for 13.882)
2025-05-26 16:51:33,936 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:33,942 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:33,945 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,947 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,947 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,948 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,949 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,949 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:33,963 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 16:51:33,964 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:51:33,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:33,967 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:33,968 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:51:33,968 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 16:51:33,974 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:34,016 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:34,016 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:34,016 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:34,268 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:34,269 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:34,434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:34,434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:34,443 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.458 seconds (process running for 14.39)
2025-05-26 16:51:34,444 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:34,450 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:34,453 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,455 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,456 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,457 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,458 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,458 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,470 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:34,470 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:34,472 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,472 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,473 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,473 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,473 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:34,474 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:34,482 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:34,522 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:34,522 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:34,522 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:34,788 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:34,789 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:34,951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:34,951 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:34,960 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.464 seconds (process running for 14.907)
2025-05-26 16:51:34,961 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:34,968 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:34,971 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,972 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,973 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,974 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,975 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,976 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:34,992 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:51:34,992 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:51:34,996 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,996 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,997 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,997 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:34,998 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:34,999 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:35,008 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:35,065 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:35,065 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:35,065 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:35,311 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:35,312 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:35,467 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:35,468 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:35,477 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.439 seconds (process running for 15.424)
2025-05-26 16:51:35,477 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:35,484 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:35,487 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,488 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,488 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,489 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,490 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,490 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:35,502 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:51:35,502 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:51:35,504 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:35,504 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:35,505 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:35,505 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:35,505 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:35,506 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:51:35,513 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:35,573 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:35,573 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:35,573 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:35,818 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:35,818 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:35,985 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:35,986 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:35,995 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.452 seconds (process running for 15.942)
2025-05-26 16:51:35,995 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:36,001 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:36,004 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,005 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,005 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,006 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,007 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,007 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,018 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:51:36,018 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:51:36,020 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:36,020 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:36,021 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:36,021 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:36,021 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:36,022 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:36,031 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:36,079 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:36,079 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:36,079 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:36,354 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:36,354 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:36,590 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:36,591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:36,600 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.551 seconds (process running for 16.547)
2025-05-26 16:51:36,601 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:36,610 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:36,614 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,616 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,617 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,618 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,618 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,619 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:36,622 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:51:36,624 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:51:36,628 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:36,672 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:36,673 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:36,673 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:36,927 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:36,928 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:37,086 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:37,087 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:37,095 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.453 seconds (process running for 17.042)
2025-05-26 16:51:37,095 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:37,101 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:37,104 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,105 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,106 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,107 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,108 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,109 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,119 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:37,119 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:51:37,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,122 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,123 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:37,124 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:51:37,124 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 16:51:37,130 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:37,185 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:37,185 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:37,186 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:37,436 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:37,437 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:37,591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:37,592 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:37,600 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.444 seconds (process running for 17.547)
2025-05-26 16:51:37,601 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:37,607 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:37,610 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,611 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,612 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,612 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,613 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,614 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:37,624 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 16:51:37,625 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:37,627 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,627 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,627 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,627 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:37,628 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:37,629 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 16:51:37,635 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:37,689 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:37,690 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:37,690 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:37,919 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:37,919 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:38,070 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:38,071 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:51:38,078 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.413 seconds (process running for 18.025)
2025-05-26 16:51:38,079 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:38,086 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:38,090 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,092 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,093 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,094 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,095 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,096 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,107 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,107 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,109 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,109 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,110 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,110 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,110 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,111 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,115 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,115 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,116 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,116 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,119 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,119 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,119 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,120 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,123 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,123 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,123 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,124 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,126 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,126 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,126 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,127 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,129 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,130 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,130 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,131 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,133 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,133 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,134 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,134 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,138 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,138 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,139 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,139 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,143 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,143 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,144 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,145 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,148 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:51:38,148 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:51:38,149 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,150 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:51:38,155 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:38,202 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 200919 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:51:38,202 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:51:38,202 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:51:38,423 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:51:38,424 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:51:38,571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:51:38,571 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:51:38,586 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.406 seconds (process running for 18.533)
2025-05-26 16:51:38,586 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:51:38,592 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:51:38,595 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,596 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,597 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,598 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,598 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,599 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:51:38,609 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:38,610 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:38,612 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,612 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,612 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,612 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:51:38,613 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,614 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:38,617 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:38,618 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:38,618 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,619 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:38,621 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:38,621 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:38,622 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,622 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:38,624 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:38,625 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:38,625 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,626 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:38,628 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:51:38,628 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:51:38,628 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:51:38,629 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:51:38,633 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:29,215 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:29,217 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:29,218 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:52:31,610 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.286 seconds (process running for 8.371)
2025-05-26 16:52:31,615 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:31,713 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:52:31,724 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:52:32,001 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:32,221 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:52:32,221 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:52:32,341 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:32,342 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:32,342 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:36,157 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:36,179 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:38,516 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:38,517 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:52:38,541 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.275 seconds (process running for 15.303)
2025-05-26 16:52:38,542 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:38,694 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:38,842 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,865 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,866 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,868 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,869 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,870 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:38,897 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 16:52:38,897 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:52:38,955 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:38,957 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:38,958 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:38,958 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:38,961 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:38,966 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:52:38,966 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 16:52:38,973 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 16:52:38,973 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:38,976 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:38,977 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:38,977 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 16:52:38,995 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:39,079 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:39,080 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:39,080 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:39,572 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:39,573 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:39,936 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:39,937 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:39,954 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.947 seconds (process running for 16.716)
2025-05-26 16:52:39,955 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:39,965 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:39,971 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,974 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,976 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,977 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,979 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,980 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:39,988 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:52:39,992 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:52:39,994 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:52:40,001 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:40,050 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:40,051 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:40,051 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:40,483 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:40,483 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:40,739 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:40,741 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:40,753 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.746 seconds (process running for 17.515)
2025-05-26 16:52:40,754 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:40,766 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:40,773 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,775 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,777 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,779 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,780 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,781 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:40,810 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:52:40,811 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:52:40,818 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:40,819 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:40,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:40,821 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:40,823 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:40,828 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:52:40,863 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:40,935 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:40,935 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:40,936 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:41,343 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:41,344 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:41,615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:41,617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:41,632 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.755 seconds (process running for 18.393)
2025-05-26 16:52:41,633 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:41,646 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:41,654 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,657 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,660 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,663 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,666 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,668 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:41,697 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:41,698 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:41,704 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:41,705 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:41,705 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:41,706 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:41,707 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:41,709 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:41,723 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:41,774 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:41,774 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:41,774 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:42,206 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:42,208 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:42,471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:42,472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:42,484 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.754 seconds (process running for 19.246)
2025-05-26 16:52:42,485 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:42,496 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:42,501 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,504 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,505 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,507 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,510 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,512 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:42,537 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 16:52:42,537 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:42,543 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:42,543 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:42,544 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:42,544 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:42,546 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:42,548 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:42,549 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 16:52:42,563 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:42,625 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:42,625 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:42,625 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:42,990 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:42,991 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:43,192 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:43,193 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:52:43,203 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 19.965)
2025-05-26 16:52:43,204 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:43,214 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:43,218 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,221 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,224 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,228 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,231 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,232 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,258 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 16:52:43,258 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 16:52:43,262 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,263 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,263 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,264 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,266 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:43,269 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 16:52:43,282 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:43,344 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:43,344 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:43,345 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:43,717 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:43,718 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:43,922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:43,923 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:43,933 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.635 seconds (process running for 20.695)
2025-05-26 16:52:43,934 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:43,941 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:43,945 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,946 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,947 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,948 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,949 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,950 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:43,965 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:52:43,965 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:52:43,968 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,968 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,969 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,969 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:43,970 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:43,971 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:43,980 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:44,035 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:44,035 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:44,035 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:44,391 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:44,392 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:44,614 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:44,615 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:44,629 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.633 seconds (process running for 21.391)
2025-05-26 16:52:44,630 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:44,646 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:44,651 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,653 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,654 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,657 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,659 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,660 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:44,673 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:52:44,680 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:44,758 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:44,759 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:44,759 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:45,096 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:45,097 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:45,303 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:45,304 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:45,315 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.6 seconds (process running for 22.077)
2025-05-26 16:52:45,316 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:45,328 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:45,333 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,336 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,338 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,340 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,342 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,344 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,367 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:45,367 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:45,372 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:45,373 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:45,373 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:45,373 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:45,375 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:45,378 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:45,392 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:45,450 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:45,450 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:45,450 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:45,770 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:45,770 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:45,971 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:45,972 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:45,981 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.574 seconds (process running for 22.742)
2025-05-26 16:52:45,981 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:45,988 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:45,991 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,992 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,994 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,995 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,996 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:45,996 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,011 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 16:52:46,012 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 16:52:46,015 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,015 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,016 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,016 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,017 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:46,019 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:46,033 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:46,096 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:46,096 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:46,096 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:46,433 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:46,434 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:46,621 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:46,622 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:46,631 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.581 seconds (process running for 23.392)
2025-05-26 16:52:46,631 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:46,638 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:46,641 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,643 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,643 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,644 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,645 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,646 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:46,659 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 16:52:46,659 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:52:46,662 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,663 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,663 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,663 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:46,664 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:46,665 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:52:46,665 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 16:52:46,673 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:46,711 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:46,711 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:46,711 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:47,014 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:47,015 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:47,241 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:47,242 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:52:47,252 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.572 seconds (process running for 24.014)
2025-05-26 16:52:47,253 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:47,261 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:47,264 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,265 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,267 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,269 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,282 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:47,282 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:47,285 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,287 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:47,288 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:47,298 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:47,364 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:47,365 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:47,365 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:47,715 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:47,716 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:47,899 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:47,900 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:47,909 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.583 seconds (process running for 24.671)
2025-05-26 16:52:47,910 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:47,917 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:47,920 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,921 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,922 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,923 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,923 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,924 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:47,937 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:52:47,938 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:52:47,940 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,941 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:47,942 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:47,943 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:47,951 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:47,987 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:47,987 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:47,987 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:48,331 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:48,332 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:48,508 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:48,509 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:52:48,518 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.555 seconds (process running for 25.279)
2025-05-26 16:52:48,518 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:48,525 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:48,528 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,529 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,530 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,531 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,532 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,532 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:48,545 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:52:48,546 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:52:48,548 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:48,549 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:48,549 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:48,549 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:48,550 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:48,551 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:52:48,560 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:48,604 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:48,604 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:48,604 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:48,954 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:48,955 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:49,169 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:49,170 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:49,180 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.607 seconds (process running for 25.942)
2025-05-26 16:52:49,181 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:49,190 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:49,194 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,195 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,197 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,198 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,199 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,200 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,216 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:52:49,216 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:52:49,220 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:49,221 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:49,221 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:49,222 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:49,224 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:49,226 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:49,242 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:49,300 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:49,301 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:49,301 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:49,650 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:49,651 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:49,901 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:49,902 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:49,912 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.653 seconds (process running for 26.674)
2025-05-26 16:52:49,913 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:49,924 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:49,930 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,931 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,933 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,934 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,935 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,936 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:49,941 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:52:49,947 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:52:49,955 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:50,024 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:50,024 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:50,025 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:50,377 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:50,378 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:50,576 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:50,577 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:50,596 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 27.358)
2025-05-26 16:52:50,597 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:50,604 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:50,608 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,609 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,610 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,611 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,612 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,612 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:50,631 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:50,631 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:52:50,635 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:50,636 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:50,636 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:50,636 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:50,637 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:50,639 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:52:50,640 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 16:52:50,649 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:50,708 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:50,709 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:50,709 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:51,076 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:51,077 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:51,266 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:51,267 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:51,277 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.619 seconds (process running for 28.039)
2025-05-26 16:52:51,278 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:51,287 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:51,292 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,293 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,294 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,296 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,299 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,301 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:51,327 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 16:52:51,328 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:51,331 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:51,332 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:51,332 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:51,332 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:51,333 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:51,335 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 16:52:51,348 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:51,445 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:51,445 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:51,446 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:51,854 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:51,855 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:52,034 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:52,035 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:52,043 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.658 seconds (process running for 28.805)
2025-05-26 16:52:52,044 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:52,050 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:52,054 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,055 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,056 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,056 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,057 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,058 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,070 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,070 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,073 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,073 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,073 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,074 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,074 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,075 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,080 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,081 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,081 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,082 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,085 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,085 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,086 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,087 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,089 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,089 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,090 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,091 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,095 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,095 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,096 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,097 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,099 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,099 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,100 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,101 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,103 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,103 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,104 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,105 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,107 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,108 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,108 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,109 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,111 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,112 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,112 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,113 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,115 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:52,116 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:52,116 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,117 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:52,124 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:52,195 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:52,195 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:52,195 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:52:52,510 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:52,511 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:52,692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:52,692 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:52:52,701 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.546 seconds (process running for 29.463)
2025-05-26 16:52:52,702 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:52,708 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:52:52,711 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,712 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,713 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,714 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,715 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,716 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:52:52,731 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:52,732 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:52,735 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,735 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,735 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,735 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:52:52,736 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,738 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:52,745 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:52,745 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:52,746 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,747 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:52,751 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:52,751 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:52,752 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,753 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:52,759 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:52,759 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:52,760 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,762 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:52,766 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:52,766 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:52,768 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:52,770 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:52,778 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:52,840 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.pruebaItx.acceptance.PriceAcceptanceTest]: PriceAcceptanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-26 16:52:52,892 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 201553 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:52:52,892 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:52:52,892 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 16:52:53,751 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:52:53,752 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:52:53,916 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:52:53,917 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:52:54,242 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 1.386 seconds (process running for 31.004)
2025-05-26 16:52:54,243 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:52:54,261 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:52:54,261 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:52:54,264 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,266 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:54,279 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:52:54,279 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:52:54,279 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,281 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:54,291 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:52:54,299 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:52:54,308 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:52:54,316 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:52:54,325 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:52:54,333 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:52:54,341 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 16:52:54,342 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:52:54,342 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,343 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:52:54,343 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 16:52:54,354 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 16:52:54,354 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:52:54,355 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,357 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:52:54,357 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 16:52:54,369 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:52:54,369 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:52:54,370 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,371 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:54,382 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:52:54,383 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:52:54,384 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,386 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:52:54,399 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:52:54,399 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:52:54,400 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,401 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:52:54,412 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:52:54,412 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:52:54,412 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,414 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:52:54,425 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:52:54,425 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:52:54,426 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:52:54,427 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:52:54,615 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:57:14,087 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 203767 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:57:14,090 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:57:14,091 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:57:17,260 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:57:17,267 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:57:19,218 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:57:19,221 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 16:57:19,271 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.589 seconds (process running for 7.629)
2025-05-26 16:57:19,275 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:57:19,669 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:57:19,737 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,752 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,754 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,756 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,757 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,758 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:57:19,882 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:57:19,883 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:57:19,939 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:57:19,942 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:57:19,943 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:57:19,944 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:57:19,948 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:57:19,956 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:57:20,089 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:24,558 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:24,561 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:24,562 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 16:58:26,896 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.256 seconds (process running for 10.3)
2025-05-26 16:58:26,901 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:27,004 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:58:27,014 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:58:27,261 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:27,478 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 16:58:27,479 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 16:58:27,588 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:27,589 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:27,589 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:31,376 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:31,391 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:33,581 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:33,582 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:33,607 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.089 seconds (process running for 17.011)
2025-05-26 16:58:33,609 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:33,758 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:33,920 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,944 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,946 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,947 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,949 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,950 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:33,984 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 16:58:33,984 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:58:34,041 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:34,044 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:34,044 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:34,045 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:34,048 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:34,053 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 16:58:34,053 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 16:58:34,064 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 16:58:34,064 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:34,068 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:34,069 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:34,069 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 16:58:34,095 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:34,191 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:34,192 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:34,192 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:34,720 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:34,721 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:35,023 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:35,028 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 4 ms
2025-05-26 16:58:35,046 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.937 seconds (process running for 18.45)
2025-05-26 16:58:35,048 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:35,061 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:35,067 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,069 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,071 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,073 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,074 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,076 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,082 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:58:35,085 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:58:35,088 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:58:35,096 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:35,144 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:35,145 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:35,145 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:35,552 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:35,553 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:35,839 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:35,841 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:35,858 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.755 seconds (process running for 19.262)
2025-05-26 16:58:35,861 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:35,875 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:35,882 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,885 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,887 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,889 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,891 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,893 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:35,926 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:58:35,927 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:58:35,931 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:35,931 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:35,932 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:35,932 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:35,933 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:35,937 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:58:35,966 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:36,018 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:36,019 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:36,019 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:36,523 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:36,524 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:36,808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:36,810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:36,826 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.848 seconds (process running for 20.229)
2025-05-26 16:58:36,828 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:36,842 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:36,850 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,852 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,855 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,857 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,859 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,861 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:36,889 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:36,890 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:36,895 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:36,895 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:36,896 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:36,896 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:36,897 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:36,899 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:36,911 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:36,956 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:36,957 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:36,957 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:37,410 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:37,411 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:37,641 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:37,642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:37,654 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.737 seconds (process running for 21.058)
2025-05-26 16:58:37,655 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:37,664 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:37,669 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,672 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,674 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,676 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,678 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,680 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:37,709 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 16:58:37,711 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:37,718 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:37,719 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:37,720 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:37,722 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:37,723 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:37,725 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:37,726 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 16:58:37,746 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:37,805 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:37,805 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:37,805 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:38,176 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:38,177 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:38,379 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:38,379 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:38,388 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.633 seconds (process running for 21.792)
2025-05-26 16:58:38,389 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:38,396 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:38,400 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,402 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,403 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,404 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,405 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,406 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:38,421 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 16:58:38,421 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 16:58:38,424 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:38,424 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:38,424 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:38,425 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:38,425 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:38,427 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 16:58:38,436 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:38,504 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:38,505 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:38,505 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:38,839 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:38,840 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:39,087 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:39,088 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:39,103 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.65 seconds (process running for 22.507)
2025-05-26 16:58:39,105 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:39,116 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:39,123 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,125 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,127 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,129 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,131 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,133 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,158 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:58:39,159 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:58:39,163 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:39,164 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:39,165 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:39,165 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:39,167 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:39,169 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:39,180 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:39,217 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:39,217 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:39,217 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:39,547 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:39,548 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:39,742 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:39,743 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:39,756 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.571 seconds (process running for 23.159)
2025-05-26 16:58:39,757 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:39,764 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:39,769 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,771 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,773 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,774 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,776 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,778 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:39,791 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:58:39,801 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:39,873 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:39,874 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:39,874 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:40,202 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:40,203 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:40,410 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:40,411 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:40,421 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.592 seconds (process running for 23.825)
2025-05-26 16:58:40,422 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:40,430 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:40,433 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,435 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,436 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,437 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,437 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,438 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:40,453 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:40,453 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:40,456 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:40,456 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:40,457 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:40,457 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:40,457 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:40,459 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:40,469 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:40,527 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:40,527 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:40,528 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:40,898 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:40,899 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:41,112 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:41,113 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:41,123 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.637 seconds (process running for 24.527)
2025-05-26 16:58:41,124 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:41,131 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:41,135 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,137 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,139 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,140 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,141 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,141 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,155 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 16:58:41,155 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 16:58:41,158 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,158 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,158 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,159 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,160 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:41,161 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:41,170 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:41,241 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:41,241 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:41,241 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:41,607 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:41,608 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:41,796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:41,797 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:41,806 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.611 seconds (process running for 25.21)
2025-05-26 16:58:41,807 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:41,814 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:41,817 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,819 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,820 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,821 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,821 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,822 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:41,836 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 16:58:41,836 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:58:41,839 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,839 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,839 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,839 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:41,840 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:41,841 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 16:58:41,842 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 16:58:41,849 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:41,892 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:41,892 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:41,892 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:42,208 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:42,210 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:42,417 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:42,418 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:42,432 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.575 seconds (process running for 25.835)
2025-05-26 16:58:42,432 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:42,439 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:42,443 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,444 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,445 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,445 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,446 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,447 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:42,460 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:42,460 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:42,462 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:42,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:42,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:42,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:42,464 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:42,465 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:42,476 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:42,545 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:42,545 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:42,545 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:42,921 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:42,923 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:43,117 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:43,118 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:43,127 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.62 seconds (process running for 26.531)
2025-05-26 16:58:43,128 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:43,135 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:43,139 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,141 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,142 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,143 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,144 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,146 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,164 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:58:43,164 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:58:43,167 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,167 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,167 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,168 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,168 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:43,170 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:43,181 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:43,258 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:43,258 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:43,258 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:43,595 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:43,595 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:43,761 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:43,762 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:43,771 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.555 seconds (process running for 27.174)
2025-05-26 16:58:43,771 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:43,779 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:43,782 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,784 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,785 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,786 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,787 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,788 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:43,800 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:58:43,801 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:58:43,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,804 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,804 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:43,804 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:43,806 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:58:43,814 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:43,878 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:43,878 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:43,878 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:44,186 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:44,188 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:44,434 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:44,435 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:44,449 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.602 seconds (process running for 27.853)
2025-05-26 16:58:44,450 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:44,457 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:44,460 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,461 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,462 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,462 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,463 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,464 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:44,477 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:58:44,477 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:58:44,480 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:44,480 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:44,481 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:44,481 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:44,482 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:44,483 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:44,495 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:44,570 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:44,570 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:44,570 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:44,916 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:44,917 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:45,138 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:45,138 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:45,152 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.624 seconds (process running for 28.556)
2025-05-26 16:58:45,153 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:45,160 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:45,163 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,165 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,166 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,166 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,171 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:58:45,174 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:58:45,179 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:45,225 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:45,226 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:45,226 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:45,555 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:45,556 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:45,731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:45,731 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:45,740 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.546 seconds (process running for 29.143)
2025-05-26 16:58:45,740 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:45,747 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:45,750 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,751 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,752 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,753 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,753 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,754 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:45,766 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:45,766 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:58:45,769 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:45,769 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:45,769 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:45,769 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:45,770 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:45,771 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 16:58:45,771 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 16:58:45,781 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:45,837 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:45,837 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:45,837 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:46,171 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:46,172 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:46,364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:46,364 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 16:58:46,372 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.568 seconds (process running for 29.776)
2025-05-26 16:58:46,373 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:46,382 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:46,385 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,387 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,389 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,391 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,392 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,393 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:46,427 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 16:58:46,427 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:46,431 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:46,432 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:46,432 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:46,432 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:46,433 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:46,436 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 16:58:46,453 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:46,511 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:46,511 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:46,511 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:46,815 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:46,815 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:46,987 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:46,988 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:46,995 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.521 seconds (process running for 30.399)
2025-05-26 16:58:46,996 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:47,002 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:47,005 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,006 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,007 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,008 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,009 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,010 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,021 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,022 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,024 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,025 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,025 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,025 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,025 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,027 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,031 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,032 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,032 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,033 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,036 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,036 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,037 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,038 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,041 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,041 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,041 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,042 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,045 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,045 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,046 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,047 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,049 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,049 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,050 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,051 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,053 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,053 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,054 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,055 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,057 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,057 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,058 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,059 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,061 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,061 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,062 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,063 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,065 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:47,065 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:47,066 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,067 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:47,072 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:47,142 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:47,142 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:47,142 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 16:58:47,460 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:47,460 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:47,632 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:47,633 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:47,641 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.541 seconds (process running for 31.044)
2025-05-26 16:58:47,641 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:47,649 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 16:58:47,652 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,654 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,655 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,655 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,656 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,657 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 16:58:47,671 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:47,671 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:47,674 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,675 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,675 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,675 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 16:58:47,676 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,678 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:47,685 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:47,685 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:47,686 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,688 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:47,693 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:47,693 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:47,695 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,696 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:47,700 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:47,700 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:47,701 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,702 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:47,706 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:47,706 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:47,708 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:47,709 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:47,717 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:47,778 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.pruebaItx.acceptance.PriceAcceptanceTest]: PriceAcceptanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-26 16:58:47,850 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 204378 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 16:58:47,850 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 16:58:47,850 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 16:58:48,763 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 16:58:48,764 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 16:58:48,934 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 16:58:48,935 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 16:58:49,254 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 1.453 seconds (process running for 32.658)
2025-05-26 16:58:49,255 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 16:58:49,272 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 16:58:49,273 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 16:58:49,275 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,277 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:49,289 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 16:58:49,290 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 16:58:49,290 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,292 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:49,301 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 16:58:49,311 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 16:58:49,320 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:58:49,330 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 16:58:49,338 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 16:58:49,347 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 16:58:49,357 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 16:58:49,357 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:58:49,358 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,360 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 16:58:49,360 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 16:58:49,371 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 16:58:49,371 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:58:49,372 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,373 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 16:58:49,373 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 16:58:49,382 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 16:58:49,382 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 16:58:49,383 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,384 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:49,394 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 16:58:49,394 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 16:58:49,395 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,396 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 16:58:49,408 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 16:58:49,408 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 16:58:49,408 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,410 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 16:58:49,420 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 16:58:49,420 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 16:58:49,421 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,423 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 16:58:49,433 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 16:58:49,433 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 16:58:49,433 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 16:58:49,435 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 16:58:49,671 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:06,288 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:06,291 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:06,293 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:11,146 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:11,159 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:14,043 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:14,046 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:00:14,120 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 8.413 seconds (process running for 10.793)
2025-05-26 17:00:14,127 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:14,954 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:15,054 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,074 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,077 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,080 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,083 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,085 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:15,327 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 17:00:15,327 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:00:15,382 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:15,385 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:15,387 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:15,388 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:15,392 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:15,398 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:00:15,400 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 17:00:15,496 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 17:00:15,496 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:00:15,500 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:15,502 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:00:15,503 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 17:00:15,540 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:15,706 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:15,706 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:15,707 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:16,530 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:16,532 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:17,075 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:17,077 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:00:17,097 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.526 seconds (process running for 13.769)
2025-05-26 17:00:17,099 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:17,117 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:17,124 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,127 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,129 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,131 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,133 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,136 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:17,149 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 17:00:17,155 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 17:00:17,160 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 17:00:17,175 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:17,255 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:17,256 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:17,256 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:17,857 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:17,859 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:18,328 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:18,329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:00:18,346 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.161 seconds (process running for 15.019)
2025-05-26 17:00:18,348 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:18,359 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:18,368 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,370 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,372 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,375 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,377 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,382 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:18,419 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 17:00:18,419 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 17:00:18,426 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:18,427 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:18,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:18,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:18,430 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:18,435 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 17:00:18,525 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:18,619 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:18,620 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:18,620 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:19,101 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:19,102 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:19,407 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:19,409 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:00:19,429 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.884 seconds (process running for 16.101)
2025-05-26 17:00:19,430 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:19,445 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:19,455 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,458 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,460 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,464 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,466 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,469 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:19,498 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:00:19,498 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:00:19,503 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:19,505 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:19,506 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:19,506 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:19,508 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:19,511 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:00:19,530 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:19,598 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:19,598 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:19,598 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:20,118 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:20,119 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:20,528 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:20,530 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:00:20,552 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.013 seconds (process running for 17.224)
2025-05-26 17:00:20,554 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:20,569 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:20,577 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,579 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,581 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,584 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,587 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,590 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:20,624 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 17:00:20,625 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:00:20,630 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:20,631 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:20,632 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:20,632 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:20,633 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:20,636 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:00:20,636 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 17:00:20,651 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:20,718 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:20,719 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:20,719 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:21,265 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:21,267 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:21,590 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:21,591 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:00:21,606 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.946 seconds (process running for 18.278)
2025-05-26 17:00:21,607 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:21,616 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:00:21,622 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,624 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,626 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,628 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,630 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,633 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:00:21,661 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 17:00:21,662 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 17:00:21,666 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:21,667 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:21,668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:21,668 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:00:21,669 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:00:21,672 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 17:00:21,690 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:21,780 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 205387 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:00:21,780 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:00:21,780 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:00:22,344 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:22,345 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:00:22,993 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:00:22,996 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:00:23,029 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 1.327 seconds (process running for 19.701)
2025-05-26 17:00:23,031 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:00:23,037 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:00:23,047 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:04:02,531 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 207596 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:04:02,535 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:04:02,536 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:04:05,881 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:04:05,889 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:04:07,717 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:04:07,719 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:04:07,769 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.631 seconds (process running for 8.678)
2025-05-26 17:04:07,772 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:04:08,255 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:04:08,334 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,351 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,353 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,355 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,357 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,358 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:04:08,501 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:04:08,501 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:04:08,561 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:04:08,565 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:04:08,566 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:04:08,566 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:04:08,570 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:04:08,579 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:04:08,721 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:08:28,916 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 209650 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:08:28,920 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:08:28,922 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:08:32,618 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:08:32,626 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:08:34,351 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:08:34,353 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:08:34,409 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.384 seconds (process running for 9.988)
2025-05-26 17:08:34,413 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:08:34,843 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:08:34,918 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:34,930 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:34,931 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:34,933 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:34,934 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:34,935 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:35,056 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:08:35,056 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:08:35,104 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:35,107 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:35,108 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:35,109 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:35,114 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:35,123 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:08:35,236 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:08:35,236 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:08:35,238 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:35,239 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:08:35,243 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:08:35,243 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:08:35,245 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:35,246 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:08:35,252 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:08:35,252 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:08:35,254 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:35,255 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:08:35,261 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:08:35,261 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:08:35,262 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:35,263 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:08:35,285 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:08:40,783 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 209878 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:08:40,786 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:08:40,787 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:08:44,081 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:08:44,091 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:08:45,798 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:08:45,800 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:08:45,840 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.42 seconds (process running for 7.106)
2025-05-26 17:08:45,844 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:08:46,257 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:08:46,327 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,337 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,339 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,340 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,341 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,342 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:08:46,452 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 17:08:46,452 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 17:08:46,489 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:46,493 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:46,494 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:46,495 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:08:46,498 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:08:46,506 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 17:08:46,645 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:17:37,860 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 213707 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:17:37,868 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:17:37,869 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:17:41,838 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:17:41,846 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:17:44,145 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:17:44,146 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:17:44,202 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.916 seconds (process running for 9.327)
2025-05-26 17:17:44,207 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:17:44,752 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:17:44,864 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:44,876 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:44,878 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:44,879 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:44,880 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:44,881 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:17:45,053 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 17:17:45,053 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 17:17:45,105 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:17:45,107 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:17:45,108 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:17:45,109 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:17:45,113 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:17:45,122 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:17:45,262 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:18:16,569 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 214121 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:18:16,572 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:18:16,573 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:18:20,097 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:18:20,105 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:18:22,035 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:18:22,037 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:18:22,088 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.582 seconds (process running for 9.47)
2025-05-26 17:18:22,092 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:18:22,648 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:18:22,743 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,756 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,758 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,759 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,761 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,762 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:22,898 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:18:22,899 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:18:22,983 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:22,986 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:22,987 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:22,987 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:22,994 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:18:23,005 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:18:23,152 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:18:49,386 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 214480 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:18:49,389 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:18:49,390 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:18:52,881 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:18:52,889 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:18:55,027 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:18:55,029 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:18:55,097 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.126 seconds (process running for 8.074)
2025-05-26 17:18:55,103 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:18:55,736 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:18:55,848 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:55,865 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:55,867 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:55,868 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:55,869 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:55,870 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:18:56,059 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:18:56,059 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:18:56,102 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:56,104 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:56,105 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:56,106 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:18:56,109 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:18:56,115 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:18:56,250 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:19:12,480 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 214764 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:19:12,482 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:19:12,484 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:19:15,731 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:19:15,739 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:19:17,534 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:19:17,536 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:19:17,587 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.495 seconds (process running for 7.163)
2025-05-26 17:19:17,591 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:19:18,132 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:19:18,215 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,227 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,229 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,230 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,231 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,232 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:18,382 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:19:18,383 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:19:18,443 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:18,446 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:18,447 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:18,448 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:18,453 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:19:18,462 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:19:18,590 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:19:50,080 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 215142 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:19:50,082 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:19:50,083 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:19:53,808 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:19:53,816 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:19:55,908 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:19:55,911 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:19:55,984 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.301 seconds (process running for 8.154)
2025-05-26 17:19:55,988 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:19:56,530 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:19:56,614 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,626 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,627 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,628 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,630 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,632 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:19:56,756 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:19:56,757 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:19:56,825 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:56,829 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:56,831 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:56,832 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:19:56,837 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:19:56,848 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:19:57,049 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:10,685 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Starting PriceControllerTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:10,688 [main] DEBUG c.p.u.a.in.web.PriceControllerTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:10,689 [main] INFO  c.p.u.a.in.web.PriceControllerTest - No active profile set, falling back to 1 default profile: "default"
2025-05-26 17:28:13,456 [main] INFO  c.p.u.a.in.web.PriceControllerTest - Started PriceControllerTest in 3.822 seconds (process running for 9.979)
2025-05-26 17:28:13,462 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:13,556 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 17:28:13,566 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 17:28:13,869 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:14,095 [main] WARN  o.s.web.servlet.PageNotFound - No mapping for GET /api/prices
2025-05-26 17:28:14,096 [main] WARN  o.s.web.servlet.PageNotFound - No endpoint GET /api/prices.
2025-05-26 17:28:14,251 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:14,252 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:14,252 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:18,665 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:18,681 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:21,212 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:21,214 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:21,249 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 7.086 seconds (process running for 17.772)
2025-05-26 17:28:21,251 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:21,481 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:21,668 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,694 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,696 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,697 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,699 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,700 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,734 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 17:28:21,735 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:28:21,828 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,832 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,833 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,833 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,837 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:21,847 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:28:21,848 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 17:28:21,857 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 17:28:21,857 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:21,860 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:21,861 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:21,861 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 17:28:21,876 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:21,950 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:21,950 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:21,951 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:22,474 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:22,475 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:22,808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:22,810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:28:22,829 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.942 seconds (process running for 19.352)
2025-05-26 17:28:22,830 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:22,843 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:22,851 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,854 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,856 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,858 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,860 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,862 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,871 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 17:28:22,875 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 17:28:22,877 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 17:28:22,885 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:22,953 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:22,953 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:22,953 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:23,380 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:23,381 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:23,617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:23,618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:23,633 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.74 seconds (process running for 20.156)
2025-05-26 17:28:23,634 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:23,653 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:23,661 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,664 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,669 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,675 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,678 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,680 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,739 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 17:28:23,740 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 17:28:23,745 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,746 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,746 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,747 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,748 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:23,752 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 17:28:23,775 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:23,857 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:23,858 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:23,858 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:24,364 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:24,365 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:24,640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:24,642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:24,658 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.864 seconds (process running for 21.181)
2025-05-26 17:28:24,659 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:24,678 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:24,689 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,693 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,695 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,698 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,701 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,703 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,738 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:24,738 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:24,743 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,746 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:24,748 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:24,762 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:24,821 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:24,821 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:24,821 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:25,242 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:25,243 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:25,471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:25,472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:25,483 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.715 seconds (process running for 22.006)
2025-05-26 17:28:25,484 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:25,493 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:25,498 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,500 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,501 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,503 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,504 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,506 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,527 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 17:28:25,528 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:25,532 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,533 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,533 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,534 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,535 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:25,537 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:25,538 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 17:28:25,555 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:25,614 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:25,615 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:25,615 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:26,000 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:26,001 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:26,218 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:26,219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:26,231 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.668 seconds (process running for 22.754)
2025-05-26 17:28:26,233 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:26,247 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:26,254 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,257 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,260 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,262 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,263 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,298 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 17:28:26,299 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 17:28:26,304 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,305 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,308 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:26,311 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 17:28:26,329 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:26,403 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:26,404 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:26,404 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:26,810 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:26,811 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:27,078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:27,080 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:27,105 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.765 seconds (process running for 23.628)
2025-05-26 17:28:27,107 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:27,124 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:27,132 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,135 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,137 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,139 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,140 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,142 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,175 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 17:28:27,175 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 17:28:27,180 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,180 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,181 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,181 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,183 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:27,185 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:27,197 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:27,242 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:27,242 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:27,242 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:27,685 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:27,686 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:27,921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:27,922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:27,933 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.731 seconds (process running for 24.456)
2025-05-26 17:28:27,935 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:27,948 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:27,954 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,957 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,959 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,961 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,963 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,967 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,983 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 17:28:27,993 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:28,067 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:28,068 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:28,068 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:28,501 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:28,502 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:28,700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:28,702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:28,719 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.695 seconds (process running for 25.242)
2025-05-26 17:28:28,719 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:28,727 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:28,731 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,733 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,735 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,736 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,737 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,738 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,760 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:28,760 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:28,765 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,767 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:28,769 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:28,785 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:28,854 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:28,855 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:28,855 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:29,206 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:29,207 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:29,405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:29,406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:29,415 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.605 seconds (process running for 25.938)
2025-05-26 17:28:29,416 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:29,424 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:29,428 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,429 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,430 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,431 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,433 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,434 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,456 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 17:28:29,456 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 17:28:29,461 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,462 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,462 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,464 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:29,467 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:29,486 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:29,564 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:29,565 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:29,565 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:29,910 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:29,911 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:30,095 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:30,096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:30,105 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.589 seconds (process running for 26.628)
2025-05-26 17:28:30,106 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:30,113 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:30,117 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,118 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,120 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,121 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,122 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,122 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,139 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 17:28:30,139 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 17:28:30,143 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,144 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,145 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,145 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,146 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:30,148 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 17:28:30,149 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 17:28:30,166 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:30,244 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:30,244 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:30,245 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:30,567 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:30,567 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:30,754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:30,755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:30,764 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.578 seconds (process running for 27.287)
2025-05-26 17:28:30,765 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:30,772 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:30,776 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,778 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,779 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,780 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,781 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,781 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,798 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:30,799 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:30,802 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,804 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:30,806 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:30,816 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:30,887 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:30,887 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:30,888 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:31,246 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:31,247 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:31,446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:31,447 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:31,455 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.612 seconds (process running for 27.978)
2025-05-26 17:28:31,456 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:31,463 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:31,466 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,468 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,469 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,470 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,470 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,471 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,484 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 17:28:31,484 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 17:28:31,487 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,489 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:31,491 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:31,503 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:31,559 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:31,560 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:31,560 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:31,885 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:31,889 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:32,125 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:32,126 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:32,138 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.612 seconds (process running for 28.661)
2025-05-26 17:28:32,139 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:32,149 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:32,155 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,158 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,164 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,166 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,169 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,202 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 17:28:32,203 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 17:28:32,207 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,208 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,209 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,209 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,210 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:32,213 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 17:28:32,227 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:32,285 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:32,285 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:32,285 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:32,621 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:32,622 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:32,879 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:32,881 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:28:32,902 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.662 seconds (process running for 29.425)
2025-05-26 17:28:32,905 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:32,920 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:32,926 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,928 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,932 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,934 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,936 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,938 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,958 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 17:28:32,958 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 17:28:32,964 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,965 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,967 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,968 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:32,970 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:32,987 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:33,022 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:33,022 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:33,022 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:33,349 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:33,350 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:33,618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:33,619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:33,628 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 30.151)
2025-05-26 17:28:33,628 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:33,636 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:33,640 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,641 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,642 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,643 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,644 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,645 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,649 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:33,652 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:33,662 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:33,733 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:33,733 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:33,733 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:34,071 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:34,071 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:34,244 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:34,245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:34,254 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.561 seconds (process running for 30.777)
2025-05-26 17:28:34,255 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:34,262 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:34,265 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,267 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,269 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,270 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,282 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:34,283 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,287 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:34,289 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 17:28:34,289 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 17:28:34,296 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:34,343 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:34,343 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:34,343 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:34,626 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:34,627 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:34,783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:34,784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:34,791 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.472 seconds (process running for 31.314)
2025-05-26 17:28:34,792 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:34,798 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:34,802 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,803 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,804 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,805 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,806 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,806 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,817 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 17:28:34,818 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,821 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:34,822 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 17:28:34,830 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:34,875 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:34,876 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:34,876 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:35,150 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:35,151 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:35,386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:35,386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:35,394 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.552 seconds (process running for 31.917)
2025-05-26 17:28:35,395 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:35,401 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:35,404 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,405 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,406 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,407 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,408 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,409 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,422 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,423 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,427 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,427 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,430 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,436 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,436 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,437 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,437 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,440 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,440 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,441 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,442 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,445 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,445 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,446 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,446 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,450 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,450 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,451 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,451 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,455 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,456 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,457 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,459 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,463 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,463 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,465 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,466 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,471 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,471 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,472 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,473 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,480 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,480 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,482 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,483 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,489 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,489 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,491 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,494 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,503 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:35,566 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:35,566 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:35,566 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:35,943 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:35,945 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:36,137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:36,138 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:36,147 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 32.67)
2025-05-26 17:28:36,148 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:36,155 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:36,159 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,161 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,163 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,165 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,169 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,197 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,197 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,202 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,205 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,207 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,218 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,218 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,219 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,221 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,227 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,227 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,228 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,230 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,235 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,236 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,237 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,240 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,245 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,245 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,247 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,248 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,257 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:36,302 [main] INFO  o.s.t.c.s.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.pruebaItx.acceptance.PriceAcceptanceTest]: PriceAcceptanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-05-26 17:28:36,374 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Starting PriceAcceptanceTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:36,374 [main] DEBUG c.p.acceptance.PriceAcceptanceTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:36,374 [main] INFO  c.p.acceptance.PriceAcceptanceTest - The following 1 profile is active: "test"
2025-05-26 17:28:37,186 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:28:37,186 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:37,329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:37,329 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:37,680 [main] INFO  c.p.acceptance.PriceAcceptanceTest - Started PriceAcceptanceTest in 1.354 seconds (process running for 34.203)
2025-05-26 17:28:37,681 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:37,702 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 17:28:37,702 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 17:28:37,705 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,708 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:37,725 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 17:28:37,725 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 17:28:37,726 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,728 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:37,741 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 17:28:37,752 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 17:28:37,763 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:37,774 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 17:28:37,784 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:37,795 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 17:28:37,805 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=99999, brandId=99
2025-05-26 17:28:37,806 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 17:28:37,807 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,808 [main] WARN  c.p.a.service.PriceService - No price found for brand: 99, product: 99999, date: 2019-06-14T10:00
2025-05-26 17:28:37,808 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=99999, brandId=99. Reason: No price found for brand 99, product 99999 at date 2019-06-14T10:00
2025-05-26 17:28:37,819 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-01-01T10:00, productId=35455, brandId=1
2025-05-26 17:28:37,820 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 17:28:37,821 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,822 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-01-01T10:00
2025-05-26 17:28:37,822 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-01-01T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-01-01T10:00
2025-05-26 17:28:37,833 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:37,833 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:37,834 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,836 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:37,848 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:37,848 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:37,849 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,850 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:37,860 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 17:28:37,861 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 17:28:37,861 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,863 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:37,874 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 17:28:37,875 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 17:28:37,875 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,877 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 17:28:37,890 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 17:28:37,890 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 17:28:37,891 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:37,893 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95
2025-05-26 17:28:38,081 [SpringApplicationShutdownHook] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:32:41,666 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 221605 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:32:41,669 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:32:41,670 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:32:44,950 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:32:44,957 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:32:46,861 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:32:46,863 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:32:46,908 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.739 seconds (process running for 9.393)
2025-05-26 17:32:46,911 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:33:02,259 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:33:02,311 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,320 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,322 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,323 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,323 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,324 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:33:02,410 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:33:02,410 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:33:02,437 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:33:02,439 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:33:02,439 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:33:02,439 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:33:02,441 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:33:02,445 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:33:02,537 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:34:44,833 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 222743 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:34:44,836 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:34:44,837 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:34:47,941 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:34:47,948 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:34:49,768 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:34:49,770 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:34:49,821 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.284 seconds (process running for 7.069)
2025-05-26 17:34:49,825 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:34:50,255 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:34:50,334 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,347 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,349 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,350 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,351 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,352 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:34:50,473 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:34:50,473 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:34:50,543 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:34:50,547 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:34:50,547 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:34:50,548 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:34:50,551 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:34:50,559 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:34:50,680 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:35:32,554 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 223208 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:35:32,558 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:35:32,559 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:35:37,035 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:35:37,046 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:35:39,276 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:35:39,278 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:35:39,352 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 7.301 seconds (process running for 9.703)
2025-05-26 17:35:39,357 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:35:39,945 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:35:40,041 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,054 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,056 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,057 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,058 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,059 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:35:40,194 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:35:40,195 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:35:40,255 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:35:40,258 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:35:40,259 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:35:40,259 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:35:40,263 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:35:40,271 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:36:22,799 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:43:05,291 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 226364 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:43:05,294 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:43:05,295 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:43:08,809 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:43:08,816 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:43:10,794 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:43:10,796 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:43:10,854 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 6.17 seconds (process running for 9.738)
2025-05-26 17:43:10,858 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:43:11,268 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:43:11,360 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,373 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,374 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,375 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,377 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,379 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:43:11,489 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:43:11,489 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:43:11,538 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:43:11,541 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:43:11,542 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:43:11,543 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:43:11,546 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:43:11,555 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:43:11,674 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:47:15,714 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 228450 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:47:15,716 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:47:15,717 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:47:18,723 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:47:18,733 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:47:20,392 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:47:20,393 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:47:20,437 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.109 seconds (process running for 8.083)
2025-05-26 17:47:20,441 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:47:20,897 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:47:20,980 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:20,996 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:20,998 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:20,999 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:21,001 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:21,002 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:47:21,129 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:47:21,130 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:47:21,183 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:47:21,187 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:47:21,189 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:47:21,190 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:47:21,194 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:47:21,201 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:47:21,331 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:49:14,703 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 229499 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:49:14,706 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:49:14,707 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:49:18,011 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:49:18,019 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:49:19,694 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:49:19,696 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:49:19,741 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.487 seconds (process running for 7.5)
2025-05-26 17:49:19,744 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:49:20,208 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:49:20,306 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,319 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,321 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,322 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,324 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,325 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:49:20,462 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:49:20,462 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:49:20,511 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:49:20,514 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:49:20,515 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:49:20,517 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:49:20,521 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:49:20,529 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:49:20,666 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:50:33,888 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 230344 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:50:33,898 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:50:33,899 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:50:37,360 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:50:37,367 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:50:39,031 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:50:39,033 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:50:39,078 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.78 seconds (process running for 7.596)
2025-05-26 17:50:39,081 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:50:39,494 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:50:39,583 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,595 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,596 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,598 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,599 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,600 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:50:39,719 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:50:39,720 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:50:39,768 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:50:39,771 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:50:39,772 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:50:39,772 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:50:39,775 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:50:39,781 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:50:39,915 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:56:33,618 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 233139 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:56:33,622 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:56:33,623 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:56:36,273 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:56:36,282 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:56:37,876 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:56:37,877 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:56:37,923 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 4.645 seconds (process running for 7.26)
2025-05-26 17:56:37,926 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:56:38,327 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:56:38,397 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,409 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,410 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,412 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,413 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,414 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:56:38,518 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:56:38,519 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:56:38,552 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:56:38,554 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:56:38,555 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:56:38,555 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:56:38,558 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:56:38,564 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:56:38,712 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:58:22,854 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 234385 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:58:22,862 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:58:22,863 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:58:25,941 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:58:25,949 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:58:27,711 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:58:27,712 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:58:27,756 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.246 seconds (process running for 6.991)
2025-05-26 17:58:27,760 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:58:28,200 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:58:28,276 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,289 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,290 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,291 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,293 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,294 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:58:28,420 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:58:28,421 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:58:28,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:58:28,466 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:58:28,467 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:58:28,467 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:58:28,471 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:58:28,478 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:58:28,600 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 17:59:49,911 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 235190 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:59:49,913 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:59:49,914 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:59:50,546 [main] WARN  o.s.w.c.s.GenericWebApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'objectMapper' defined in class path resource [com/pruebaItx/infrastructure/config/OpenApiJacksonConfig.class]: Cannot register bean definition [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; fallback=false; factoryBeanName=openApiJacksonConfig; factoryMethodName=objectMapper; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/pruebaItx/infrastructure/config/OpenApiJacksonConfig.class]] for bean 'objectMapper' since there is already [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; fallback=false; factoryBeanName=jacksonConfig; factoryMethodName=objectMapper; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/pruebaItx/infrastructure/config/JacksonConfig.class]] bound.
2025-05-26 17:59:50,609 [main] ERROR o.s.b.d.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The bean 'objectMapper', defined in class path resource [com/pruebaItx/infrastructure/config/OpenApiJacksonConfig.class], could not be registered. A bean with that name has already been defined in class path resource [com/pruebaItx/infrastructure/config/JacksonConfig.class] and overriding is disabled.

Action:

Consider renaming one of the beans or enabling overriding by setting spring.main.allow-bean-definition-overriding=true

2025-05-26 17:59:50,615 [main] WARN  o.s.test.context.TestContextManager - Caught exception while allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] to prepare test instance [com.pruebaItx.integration.PriceIntegrationTest@1db87583]
java.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@ceddaf8 testClass = com.pruebaItx.integration.PriceIntegrationTest, locations = [], classes = [com.pruebaItx.PruebaItxApplication], contextInitializerClasses = [], activeProfiles = ["test"], propertySourceDescriptors = [], propertySourceProperties = ["org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true"], contextCustomizers = [[ImportsContextCustomizer@3d90eeb3 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@22d7b4f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4982cc36, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6187d1f5, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2df6226d, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@49cb9cb5, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@6bbe2511, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@50c0436e], resourceBasePath = "src/main/webapp", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)
	at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$11(ClassBasedTestDescriptor.java:378)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.executeAndMaskThrowable(ClassBasedTestDescriptor.java:383)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeTestInstancePostProcessors$12(ClassBasedTestDescriptor.java:378)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
	at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
	at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeTestInstancePostProcessors(ClassBasedTestDescriptor.java:377)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$instantiateAndPostProcessTestInstance$7(ClassBasedTestDescriptor.java:290)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.instantiateAndPostProcessTestInstance(ClassBasedTestDescriptor.java:289)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$5(ClassBasedTestDescriptor.java:279)
	at java.base/java.util.Optional.orElseGet(Optional.java:364)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$testInstancesProvider$6(ClassBasedTestDescriptor.java:278)
	at org.junit.jupiter.engine.execution.TestInstancesProvider.getTestInstances(TestInstancesProvider.java:31)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$prepare$1(TestMethodTestDescriptor.java:105)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:104)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.prepare(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$prepare$2(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.prepare(NodeTestTask.java:128)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:63)
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:57)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater$1.execute(IdeaTestRunner.java:38)
	at com.intellij.rt.execution.junit.TestsRepeater.repeat(TestsRepeater.java:11)
	at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:35)
	at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:231)
	at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:55)
Caused by: org.springframework.beans.factory.support.BeanDefinitionOverrideException: Invalid bean definition with name 'objectMapper' defined in class path resource [com/pruebaItx/infrastructure/config/OpenApiJacksonConfig.class]: Cannot register bean definition [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; fallback=false; factoryBeanName=openApiJacksonConfig; factoryMethodName=objectMapper; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/pruebaItx/infrastructure/config/OpenApiJacksonConfig.class]] for bean 'objectMapper' since there is already [Root bean: class=null; scope=; abstract=false; lazyInit=null; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; fallback=false; factoryBeanName=jacksonConfig; factoryMethodName=objectMapper; initMethodNames=null; destroyMethodNames=[(inferred)]; defined in class path resource [com/pruebaItx/infrastructure/config/JacksonConfig.class]] bound.
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:1151)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForBeanMethod(ConfigurationClassBeanDefinitionReader.java:292)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitionsForConfigurationClass(ConfigurationClassBeanDefinitionReader.java:145)
	at org.springframework.context.annotation.ConfigurationClassBeanDefinitionReader.loadBeanDefinitions(ConfigurationClassBeanDefinitionReader.java:121)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.processConfigBeanDefinitions(ConfigurationClassPostProcessor.java:430)
	at org.springframework.context.annotation.ConfigurationClassPostProcessor.postProcessBeanDefinitionRegistry(ConfigurationClassPostProcessor.java:290)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanDefinitionRegistryPostProcessors(PostProcessorRegistrationDelegate.java:349)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:118)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:791)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:609)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)
	at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)
	at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)
	at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)
	... 74 common frames omitted
2025-05-26 18:00:24,606 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 235491 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 18:00:24,609 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 18:00:24,610 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 18:00:27,967 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
2025-05-26 18:00:27,975 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 18:00:29,400 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 18:00:29,402 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 18:00:29,441 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 5.294 seconds (process running for 7.201)
2025-05-26 18:00:29,444 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 18:00:29,820 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 18:00:29,893 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:29,905 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:29,906 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:29,907 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:29,908 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:29,909 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 18:00:30,019 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 18:00:30,019 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 18:00:30,058 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 18:00:30,060 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 18:00:30,061 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 18:00:30,062 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 18:00:30,066 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 18:00:30,072 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50
2025-05-26 18:00:30,201 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 

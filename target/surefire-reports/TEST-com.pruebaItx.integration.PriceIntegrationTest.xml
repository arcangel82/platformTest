<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.pruebaItx.integration.PriceIntegrationTest" time="22.154" tests="20" errors="0" skipped="0" failures="5">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/test-classes:/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/home/angelperez/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/home/angelperez/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/home/angelperez/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/home/angelperez/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/home/angelperez/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/angelperez/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/angelperez/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/home/angelperez/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/home/angelperez/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/home/angelperez/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/home/angelperez/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/home/angelperez/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/home/angelperez/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/angelperez/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/home/angelperez/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.4.1/spring-boot-starter-aop-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/home/angelperez/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-data-jdbc/3.4.1/spring-boot-starter-data-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/angelperez/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-jdbc/3.4.1/spring-data-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-relational/3.4.1/spring-data-relational-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/home/angelperez/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/home/angelperez/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/home/angelperez/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/angelperez/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/angelperez/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/home/angelperez/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/home/angelperez/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/angelperez/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/angelperez/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/angelperez/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/angelperez/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.7.0/springdoc-openapi-starter-webmvc-ui-2.7.0.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.7.0/springdoc-openapi-starter-webmvc-api-2.7.0.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.7.0/springdoc-openapi-starter-common-2.7.0.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.25/swagger-core-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.25/swagger-annotations-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.25/swagger-models-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.2/jackson-dataformat-yaml-2.18.2.jar:/home/angelperez/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/home/angelperez/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/home/angelperez/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/home/angelperez/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/home/angelperez/.m2/repository/org/openapitools/jackson-databind-nullable/0.2.6/jackson-databind-nullable-0.2.6.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/home/angelperez/.m2/repository/org/mapstruct/mapstruct/1.6.3/mapstruct-1.6.3.jar:/home/angelperez/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/home/angelperez/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/home/angelperez/.m2/repository/com/google/errorprone/error_prone_annotations/2.27.0/error_prone_annotations-2.27.0.jar:/home/angelperez/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.0.0/jakarta.servlet-api-6.0.0.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/home/angelperez/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/angelperez/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/angelperez/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/angelperez/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/angelperez/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/angelperez/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/angelperez/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/home/angelperez/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/angelperez/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/home/angelperez/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/angelperez/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/home/angelperez/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/home/angelperez/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/home/angelperez/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/home/angelperez/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/angelperez/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/home/angelperez/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/angelperez/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/angelperez/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/home/angelperez/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Europe/Madrid"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="platform-test"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="ES"/>
    <property name="sun.boot.library.path" value="/home/angelperez/.jdks/corretto-17.0.15/lib"/>
    <property name="sun.java.command" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/surefire/surefirebooter-20250526172803361_3.jar /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/surefire 2025-05-26T17-28-03_261-jvmRun1 surefire-20250526172803361_1tmp surefire_0-20250526172803361_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/test-classes:/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/classes:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.4.1/spring-boot-starter-web-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter/3.4.1/spring-boot-starter-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.4.1/spring-boot-starter-logging-3.4.1.jar:/home/angelperez/.m2/repository/ch/qos/logback/logback-classic/1.5.12/logback-classic-1.5.12.jar:/home/angelperez/.m2/repository/ch/qos/logback/logback-core/1.5.12/logback-core-1.5.12.jar:/home/angelperez/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/home/angelperez/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/home/angelperez/.m2/repository/org/slf4j/jul-to-slf4j/2.0.16/jul-to-slf4j-2.0.16.jar:/home/angelperez/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/angelperez/.m2/repository/org/yaml/snakeyaml/2.3/snakeyaml-2.3.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.4.1/spring-boot-starter-json-3.4.1.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.18.2/jackson-datatype-jdk8-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.18.2/jackson-module-parameter-names-2.18.2.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.4.1/spring-boot-starter-tomcat-3.4.1.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.34/tomcat-embed-core-10.1.34.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.34/tomcat-embed-websocket-10.1.34.jar:/home/angelperez/.m2/repository/org/springframework/spring-web/6.2.1/spring-web-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-beans/6.2.1/spring-beans-6.2.1.jar:/home/angelperez/.m2/repository/io/micrometer/micrometer-observation/1.14.2/micrometer-observation-1.14.2.jar:/home/angelperez/.m2/repository/io/micrometer/micrometer-commons/1.14.2/micrometer-commons-1.14.2.jar:/home/angelperez/.m2/repository/org/springframework/spring-webmvc/6.2.1/spring-webmvc-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-context/6.2.1/spring-context-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-expression/6.2.1/spring-expression-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.4.1/spring-boot-starter-validation-3.4.1.jar:/home/angelperez/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.34/tomcat-embed-el-10.1.34.jar:/home/angelperez/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.2.Final/hibernate-validator-8.0.2.Final.jar:/home/angelperez/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/angelperez/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/home/angelperez/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-aop/3.4.1/spring-boot-starter-aop-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-aop/6.2.1/spring-aop-6.2.1.jar:/home/angelperez/.m2/repository/org/aspectj/aspectjweaver/1.9.22.1/aspectjweaver-1.9.22.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-data-jdbc/3.4.1/spring-boot-starter-data-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.4.1/spring-boot-starter-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/com/zaxxer/HikariCP/5.1.0/HikariCP-5.1.0.jar:/home/angelperez/.m2/repository/org/springframework/spring-jdbc/6.2.1/spring-jdbc-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-jdbc/3.4.1/spring-data-jdbc-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-relational/3.4.1/spring-data-relational-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-commons/3.4.1/spring-data-commons-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-tx/6.2.1/spring-tx-6.2.1.jar:/home/angelperez/.m2/repository/org/slf4j/slf4j-api/2.0.16/slf4j-api-2.0.16.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.4.1/spring-boot-starter-data-jpa-3.4.1.jar:/home/angelperez/.m2/repository/org/hibernate/orm/hibernate-core/6.6.4.Final/hibernate-core-6.6.4.Final.jar:/home/angelperez/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/angelperez/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/angelperez/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/home/angelperez/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/home/angelperez/.m2/repository/net/bytebuddy/byte-buddy/1.15.11/byte-buddy-1.15.11.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/angelperez/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/angelperez/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/angelperez/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/angelperez/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/angelperez/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/angelperez/.m2/repository/org/springframework/data/spring-data-jpa/3.4.1/spring-data-jpa-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-orm/6.2.1/spring-orm-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-aspects/6.2.1/spring-aspects-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-devtools/3.4.1/spring-boot-devtools-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot/3.4.1/spring-boot-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.4.1/spring-boot-autoconfigure-3.4.1.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.7.0/springdoc-openapi-starter-webmvc-ui-2.7.0.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.7.0/springdoc-openapi-starter-webmvc-api-2.7.0.jar:/home/angelperez/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.7.0/springdoc-openapi-starter-common-2.7.0.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.25/swagger-core-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.25/swagger-annotations-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.25/swagger-models-jakarta-2.2.25.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.18.2/jackson-dataformat-yaml-2.18.2.jar:/home/angelperez/.m2/repository/org/webjars/swagger-ui/5.18.2/swagger-ui-5.18.2.jar:/home/angelperez/.m2/repository/org/webjars/webjars-locator-lite/1.0.1/webjars-locator-lite-1.0.1.jar:/home/angelperez/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/home/angelperez/.m2/repository/com/h2database/h2/2.3.232/h2-2.3.232.jar:/home/angelperez/.m2/repository/org/openapitools/jackson-databind-nullable/0.2.6/jackson-databind-nullable-0.2.6.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.18.2/jackson-databind-2.18.2.jar:/home/angelperez/.m2/repository/org/mapstruct/mapstruct/1.6.3/mapstruct-1.6.3.jar:/home/angelperez/.m2/repository/org/projectlombok/lombok/1.18.36/lombok-1.18.36.jar:/home/angelperez/.m2/repository/com/google/code/gson/gson/2.11.0/gson-2.11.0.jar:/home/angelperez/.m2/repository/com/google/errorprone/error_prone_annotations/2.27.0/error_prone_annotations-2.27.0.jar:/home/angelperez/.m2/repository/jakarta/servlet/jakarta.servlet-api/6.0.0/jakarta.servlet-api-6.0.0.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.18.2/jackson-datatype-jsr310-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.18.2/jackson-annotations-2.18.2.jar:/home/angelperez/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.18.2/jackson-core-2.18.2.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.4.1/spring-boot-starter-test-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-test/3.4.1/spring-boot-test-3.4.1.jar:/home/angelperez/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.4.1/spring-boot-test-autoconfigure-3.4.1.jar:/home/angelperez/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/angelperez/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/angelperez/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.3/jakarta.activation-api-2.1.3.jar:/home/angelperez/.m2/repository/net/minidev/json-smart/2.5.1/json-smart-2.5.1.jar:/home/angelperez/.m2/repository/net/minidev/accessors-smart/2.5.1/accessors-smart-2.5.1.jar:/home/angelperez/.m2/repository/org/ow2/asm/asm/9.6/asm-9.6.jar:/home/angelperez/.m2/repository/org/assertj/assertj-core/3.26.3/assertj-core-3.26.3.jar:/home/angelperez/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/angelperez/.m2/repository/org/hamcrest/hamcrest/2.2/hamcrest-2.2.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter/5.11.4/junit-jupiter-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.11.4/junit-jupiter-api-5.11.4.jar:/home/angelperez/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/angelperez/.m2/repository/org/junit/platform/junit-platform-commons/1.11.4/junit-platform-commons-1.11.4.jar:/home/angelperez/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.11.4/junit-jupiter-params-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.11.4/junit-jupiter-engine-5.11.4.jar:/home/angelperez/.m2/repository/org/junit/platform/junit-platform-engine/1.11.4/junit-platform-engine-1.11.4.jar:/home/angelperez/.m2/repository/org/mockito/mockito-core/5.14.2/mockito-core-5.14.2.jar:/home/angelperez/.m2/repository/net/bytebuddy/byte-buddy-agent/1.15.11/byte-buddy-agent-1.15.11.jar:/home/angelperez/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/angelperez/.m2/repository/org/mockito/mockito-junit-jupiter/5.14.2/mockito-junit-jupiter-5.14.2.jar:/home/angelperez/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/angelperez/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/angelperez/.m2/repository/org/springframework/spring-core/6.2.1/spring-core-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-jcl/6.2.1/spring-jcl-6.2.1.jar:/home/angelperez/.m2/repository/org/springframework/spring-test/6.2.1/spring-test-6.2.1.jar:/home/angelperez/.m2/repository/org/xmlunit/xmlunit-core/2.10.0/xmlunit-core-2.10.0.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/angelperez"/>
    <property name="user.language" value="es"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-04-15"/>
    <property name="java.home" value="/home/angelperez/.jdks/corretto-17.0.15"/>
    <property name="file.separator" value="/"/>
    <property name="basedir" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico/target/surefire/surefirebooter-20250526172803361_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.15+6-LTS"/>
    <property name="user.name" value="angelperez"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.11.0-26-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.15.6.1"/>
    <property name="LOG_FILE" value="logs/platform-test.log"/>
    <property name="localRepository" value="/home/angelperez/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2025.1.1.1"/>
    <property name="com.zaxxer.hikari.pool_number" value="20"/>
    <property name="java.version" value="17.0.15"/>
    <property name="user.dir" value="/home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="219136"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.15+6-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="61.0"/>
    <property name="CONSOLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss} - %msg%n"/>
    <property name="LOGGED_APPLICATION_NAME" value="[platform-test] "/>
  </properties>
  <testcase name="shouldValidateRequestParameters_NegativeValues" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.628">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:14,251 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:14,252 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:14,252 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:18,665 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:18,681 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:21,212 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:21,214 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:21,249 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 7.086 seconds (process running for 17.772)
2025-05-26 17:28:21,251 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:21,481 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:21,668 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,694 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,696 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,697 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,699 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,700 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:21,734 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=-1, brandId=1
2025-05-26 17:28:21,735 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:28:21,828 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,832 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,833 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,833 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:21,837 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:21,847 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: -1, date: 2020-06-14T10:00
2025-05-26 17:28:21,848 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=-1, brandId=1. Reason: No price found for brand 1, product -1 at date 2020-06-14T10:00
2025-05-26 17:28:21,857 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=-1
2025-05-26 17:28:21,857 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:21,860 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:21,861 [main] WARN  c.p.a.service.PriceService - No price found for brand: -1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:21,861 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=-1. Reason: No price found for brand -1, product 35455 at date 2020-06-14T10:00
2025-05-26 17:28:21,876 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldValidateRequestParameters_MissingParameters" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.055">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:21,950 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:21,950 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:21,951 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:22,474 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:22,475 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:22,808 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:22,810 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:28:22,829 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.942 seconds (process running for 19.352)
2025-05-26 17:28:22,830 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:22,843 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:22,851 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,854 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,856 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,858 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,860 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,862 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:22,871 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'applicationDate' for method parameter type LocalDateTime is not present]
2025-05-26 17:28:22,875 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'productId' for method parameter type Long is not present]
2025-05-26 17:28:22,877 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.bind.MissingServletRequestParameterException: Required request parameter 'brandId' for method parameter type Long is not present]
2025-05-26 17:28:22,885 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="test4_getPriceAt10_00OnDay15" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.141">
    <failure message="Got a list of values [2020,6,15,0,0] instead of the expected single value 2020-06-15T00:00:00" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Got a list of values [2020,6,15,0,0] instead of the expected single value 2020-06-15T00:00:00
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:39)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:154)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$2(JsonPathResultMatchers.java:112)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.pruebaItx.integration.PriceIntegrationTest.test4_getPriceAt10_00OnDay15(PriceIntegrationTest.java:192)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:22,953 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:22,953 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:22,953 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:23,380 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:23,381 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:23,617 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:23,618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:23,633 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.74 seconds (process running for 20.156)
2025-05-26 17:28:23,634 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:23,653 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:23,661 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,664 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,669 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,675 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,678 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,680 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:23,739 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-15T10:00, productId=35455, brandId=1
2025-05-26 17:28:23,740 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-15T10:00
2025-05-26 17:28:23,745 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,746 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,746 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,747 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:23,748 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:23,752 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 30.50

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/prices
       Parameters = {applicationDate=[2020-06-15T10:00:00], productId=[35455], brandId=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.pruebaItx.infrastructure.adapter.in.web.PriceController
           Method = com.pruebaItx.infrastructure.adapter.in.web.PriceController#getPrice(LocalDateTime, Long, Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"productId":35455,"brandId":1,"priceList":3,"startDate":[2020,6,15,0,0],"endDate":[2020,6,15,11,0],"price":30.5,"currency":"EUR"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2025-05-26 17:28:23,775 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="test1_getPriceAt10_00OnDay14" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.1">
    <failure message="Got a list of values [2020,6,14,0,0] instead of the expected single value 2020-06-14T00:00:00" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Got a list of values [2020,6,14,0,0] instead of the expected single value 2020-06-14T00:00:00
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:39)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:154)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$2(JsonPathResultMatchers.java:112)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.pruebaItx.integration.PriceIntegrationTest.test1_getPriceAt10_00OnDay14(PriceIntegrationTest.java:129)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:23,857 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:23,858 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:23,858 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:24,364 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:24,365 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:24,640 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:24,642 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:24,658 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.864 seconds (process running for 21.181)
2025-05-26 17:28:24,659 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:24,678 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:24,689 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,693 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,695 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,698 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,701 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,703 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:24,738 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:24,738 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:24,743 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,744 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:24,746 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:24,748 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/prices
       Parameters = {applicationDate=[2020-06-14T10:00:00], productId=[35455], brandId=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.pruebaItx.infrastructure.adapter.in.web.PriceController
           Method = com.pruebaItx.infrastructure.adapter.in.web.PriceController#getPrice(LocalDateTime, Long, Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"productId":35455,"brandId":1,"priceList":1,"startDate":[2020,6,14,0,0],"endDate":[2020,12,31,23,59,59],"price":35.5,"currency":"EUR"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2025-05-26 17:28:24,762 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenBrandNotFound" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.073">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:24,821 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:24,821 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:24,821 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:25,242 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:25,243 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:25,471 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:25,472 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:25,483 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.715 seconds (process running for 22.006)
2025-05-26 17:28:25,484 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:25,493 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:25,498 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,500 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,501 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,503 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,504 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,506 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:25,527 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=999
2025-05-26 17:28:25,528 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:25,532 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,533 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,533 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,534 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:25,535 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:25,537 [main] WARN  c.p.a.service.PriceService - No price found for brand: 999, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:25,538 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=35455, brandId=999. Reason: No price found for brand 999, product 35455 at date 2020-06-14T10:00
2025-05-26 17:28:25,555 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturnCorrectPriceForDifferentProduct" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.101">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:25,614 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:25,615 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:25,615 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:26,000 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:26,001 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:26,218 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:26,219 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:26,231 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.668 seconds (process running for 22.754)
2025-05-26 17:28:26,233 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:26,247 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:26,254 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,257 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,260 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,262 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,263 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:26,298 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99999, brandId=1
2025-05-26 17:28:26,299 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99999, date: 2020-06-14T10:00
2025-05-26 17:28:26,304 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,305 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,306 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:26,308 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:26,311 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 25.00
2025-05-26 17:28:26,329 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldHandleBoundaryDatesCorrectly_StartDate" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.089">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:26,403 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:26,404 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:26,404 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:26,810 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:26,811 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:27,078 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:27,080 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:27,105 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.765 seconds (process running for 23.628)
2025-05-26 17:28:27,107 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:27,124 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:27,132 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,135 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,137 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,139 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,140 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,142 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,175 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T15:00, productId=35455, brandId=1
2025-05-26 17:28:27,175 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T15:00
2025-05-26 17:28:27,180 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,180 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,181 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,181 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:27,183 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:27,185 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:27,197 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldValidateRequestParameters_InvalidDateFormat" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.081">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:27,242 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:27,242 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:27,242 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:27,685 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:27,686 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:27,921 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:27,922 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:27,933 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.731 seconds (process running for 24.456)
2025-05-26 17:28:27,935 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:27,948 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:27,954 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,957 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,959 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,961 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,963 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,967 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:27,983 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'applicationDate': Failed to convert value of type 'java.lang.String' to required type 'java.time.LocalDateTime'; Failed to convert from type [java.lang.String] to type [@jakarta.validation.constraints.NotNull @io.swagger.v3.oas.annotations.Parameter @jakarta.validation.Valid @org.springframework.web.bind.annotation.RequestParam @org.springframework.format.annotation.DateTimeFormat java.time.LocalDateTime] for value [invalid-date]]
2025-05-26 17:28:27,993 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldPrioritizeHigherPriorityPrice" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.085">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:28,067 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:28,068 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:28,068 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:28,501 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:28,502 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:28,700 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:28,702 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:28,719 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.695 seconds (process running for 25.242)
2025-05-26 17:28:28,719 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:28,727 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:28,731 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,733 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,735 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,736 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,737 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,738 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:28,760 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:28,760 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:28,765 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,766 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:28,767 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:28,769 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:28,785 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldHandleBoundaryDatesCorrectly_OneSecondAfterEnd" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.094">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:28,854 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:28,855 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:28,855 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:29,206 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:29,207 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:29,405 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:29,406 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:29,415 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.605 seconds (process running for 25.938)
2025-05-26 17:28:29,416 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:29,424 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:29,428 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,429 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,430 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,431 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,433 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,434 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:29,456 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30:01, productId=35455, brandId=1
2025-05-26 17:28:29,456 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30:01
2025-05-26 17:28:29,461 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,462 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,462 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,463 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:29,464 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:29,467 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:29,486 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenProductNotFound" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.075">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:29,564 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:29,565 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:29,565 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:29,910 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:29,911 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:30,095 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:30,096 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:30,105 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.589 seconds (process running for 26.628)
2025-05-26 17:28:30,106 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:30,113 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:30,117 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,118 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,120 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,121 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,122 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,122 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,139 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=99998, brandId=1
2025-05-26 17:28:30,139 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 17:28:30,143 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,144 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,145 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,145 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,146 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:30,148 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 99998, date: 2020-06-14T10:00
2025-05-26 17:28:30,149 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2020-06-14T10:00, productId=99998, brandId=1. Reason: No price found for brand 1, product 99998 at date 2020-06-14T10:00
2025-05-26 17:28:30,166 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="test2_getPriceAt16_00OnDay14" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.073">
    <failure message="Got a list of values [2020,6,14,15,0] instead of the expected single value 2020-06-14T15:00:00" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Got a list of values [2020,6,14,15,0] instead of the expected single value 2020-06-14T15:00:00
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:39)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:154)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$2(JsonPathResultMatchers.java:112)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.pruebaItx.integration.PriceIntegrationTest.test2_getPriceAt16_00OnDay14(PriceIntegrationTest.java:150)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:30,244 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:30,244 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:30,245 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:30,567 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:30,567 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:30,754 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:30,755 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:30,764 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.578 seconds (process running for 27.287)
2025-05-26 17:28:30,765 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:30,772 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:30,776 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,778 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,779 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,780 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,781 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,781 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:30,798 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:30,799 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:30,802 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,803 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:30,804 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:30,806 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/prices
       Parameters = {applicationDate=[2020-06-14T16:00:00], productId=[35455], brandId=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.pruebaItx.infrastructure.adapter.in.web.PriceController
           Method = com.pruebaItx.infrastructure.adapter.in.web.PriceController#getPrice(LocalDateTime, Long, Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"productId":35455,"brandId":1,"priceList":2,"startDate":[2020,6,14,15,0],"endDate":[2020,6,14,18,30],"price":25.45,"currency":"EUR"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2025-05-26 17:28:30,816 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldHandleBoundaryDatesCorrectly_EndDate" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.066">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:30,887 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:30,887 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:30,888 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:31,246 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:31,247 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:31,446 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:31,447 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:31,455 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.612 seconds (process running for 27.978)
2025-05-26 17:28:31,456 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:31,463 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:31,466 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,468 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,469 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,470 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,470 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,471 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:31,484 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T18:30, productId=35455, brandId=1
2025-05-26 17:28:31,484 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T18:30
2025-05-26 17:28:31,487 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,488 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:31,489 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:31,491 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:31,503 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="test5_getPriceAt21_00OnDay16" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.093">
    <failure message="Got a list of values [2020,6,15,16,0] instead of the expected single value 2020-06-15T16:00:00" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Got a list of values [2020,6,15,16,0] instead of the expected single value 2020-06-15T16:00:00
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:39)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:154)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$2(JsonPathResultMatchers.java:112)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.pruebaItx.integration.PriceIntegrationTest.test5_getPriceAt21_00OnDay16(PriceIntegrationTest.java:213)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:31,559 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:31,560 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:31,560 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:31,885 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:31,889 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:32,125 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:32,126 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:32,138 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.612 seconds (process running for 28.661)
2025-05-26 17:28:32,139 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:32,149 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:32,155 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,158 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,164 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,166 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,169 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,202 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-16T21:00, productId=35455, brandId=1
2025-05-26 17:28:32,203 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-16T21:00
2025-05-26 17:28:32,207 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,208 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,209 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,209 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,210 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:32,213 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 38.95

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/prices
       Parameters = {applicationDate=[2020-06-16T21:00:00], productId=[35455], brandId=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.pruebaItx.infrastructure.adapter.in.web.PriceController
           Method = com.pruebaItx.infrastructure.adapter.in.web.PriceController#getPrice(LocalDateTime, Long, Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"productId":35455,"brandId":1,"priceList":4,"startDate":[2020,6,15,16,0],"endDate":[2020,12,31,23,59,59],"price":38.95,"currency":"EUR"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2025-05-26 17:28:32,227 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="test3_getPriceAt21_00OnDay14" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.08">
    <failure message="Got a list of values [2020,6,14,0,0] instead of the expected single value 2020-06-14T00:00:00" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: Got a list of values [2020,6,14,0,0] instead of the expected single value 2020-06-14T00:00:00
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:39)
	at org.springframework.test.util.JsonPathExpectationsHelper.assertValue(JsonPathExpectationsHelper.java:154)
	at org.springframework.test.web.servlet.result.JsonPathResultMatchers.lambda$value$2(JsonPathResultMatchers.java:112)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:214)
	at com.pruebaItx.integration.PriceIntegrationTest.test3_getPriceAt21_00OnDay14(PriceIntegrationTest.java:171)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
]]></failure>
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:32,285 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:32,285 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:32,285 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:32,621 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:32,622 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:32,879 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:32,881 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 2 ms
2025-05-26 17:28:32,902 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.662 seconds (process running for 29.425)
2025-05-26 17:28:32,905 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:32,920 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:32,926 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,928 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,932 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,934 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,936 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,938 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:32,958 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T21:00, productId=35455, brandId=1
2025-05-26 17:28:32,958 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T21:00
2025-05-26 17:28:32,964 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,965 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,966 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,967 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:32,968 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:32,970 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/v1/prices
       Parameters = {applicationDate=[2020-06-14T21:00:00], productId=[35455], brandId=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.pruebaItx.infrastructure.adapter.in.web.PriceController
           Method = com.pruebaItx.infrastructure.adapter.in.web.PriceController#getPrice(LocalDateTime, Long, Long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json"]
     Content type = application/json
             Body = {"productId":35455,"brandId":1,"priceList":1,"startDate":[2020,6,14,0,0],"endDate":[2020,12,31,23,59,59],"price":35.5,"currency":"EUR"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
2025-05-26 17:28:32,987 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldValidateRequestParameters_InvalidParameterTypes" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.061">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:33,022 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:33,022 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:33,022 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:33,349 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:33,350 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:33,618 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:33,619 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:33,628 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 30.151)
2025-05-26 17:28:33,628 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:33,636 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:33,640 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,641 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,642 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,643 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,644 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,645 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:33,649 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'productId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:33,652 [main] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'brandId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; For input string: "not-a-number"]
2025-05-26 17:28:33,662 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturn404WhenNoPriceFound" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.06">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:33,733 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:33,733 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:33,733 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:34,071 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:34,071 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:34,244 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:34,245 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:34,254 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.561 seconds (process running for 30.777)
2025-05-26 17:28:34,255 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:34,262 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:34,265 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,266 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,267 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,268 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,269 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,270 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,282 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2019-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:34,283 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,286 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,287 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:34,289 [main] WARN  c.p.a.service.PriceService - No price found for brand: 1, product: 35455, date: 2019-06-14T10:00
2025-05-26 17:28:34,289 [main] INFO  c.p.i.a.in.web.PriceController - No price found for applicationDate=2019-06-14T10:00, productId=35455, brandId=1. Reason: No price found for brand 1, product 35455 at date 2019-06-14T10:00
2025-05-26 17:28:34,296 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturnCorrectPriceForDifferentBrand" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.046">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:34,343 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:34,343 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:34,343 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:34,626 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:34,627 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:34,783 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:34,784 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:34,791 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.472 seconds (process running for 31.314)
2025-05-26 17:28:34,792 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:34,798 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:34,802 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,803 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,804 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,805 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,806 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,806 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:34,817 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=2
2025-05-26 17:28:34,818 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 2, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,820 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:34,821 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:34,822 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 42.00
2025-05-26 17:28:34,830 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldHandleConcurrentRequestsCorrectly" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.112">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:34,875 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:34,876 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:34,876 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:35,150 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:35,151 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:35,386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:35,386 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 0 ms
2025-05-26 17:28:35,394 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.552 seconds (process running for 31.917)
2025-05-26 17:28:35,395 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:35,401 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:35,404 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,405 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,406 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,407 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,408 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,409 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:35,422 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,423 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,427 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,427 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:35,428 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,430 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,436 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,436 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,437 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,437 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,440 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,440 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,441 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,442 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,445 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,445 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,446 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,446 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,450 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,450 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,451 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,451 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,455 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,456 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,457 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,459 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,463 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,463 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,465 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,466 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,471 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,471 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,472 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,473 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,480 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,480 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,482 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,483 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,489 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T10:00, productId=35455, brandId=1
2025-05-26 17:28:35,489 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T10:00
2025-05-26 17:28:35,491 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:35,494 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 0 and value 35.50
2025-05-26 17:28:35,503 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
  <testcase name="shouldReturnConsistentResultsForSameRequest" classname="com.pruebaItx.integration.PriceIntegrationTest" time="0.116">
    <system-out><![CDATA[
  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.1)

2025-05-26 17:28:35,566 [main] INFO  c.p.i.PriceIntegrationTest - Starting PriceIntegrationTest using Java 17.0.15 with PID 219136 (started by angelperez in /home/angelperez/Desarrollo/apps/TestProjects/ITX_Plataforma_CasoPractico)
2025-05-26 17:28:35,566 [main] DEBUG c.p.i.PriceIntegrationTest - Running with Spring Boot v3.4.1, Spring v6.2.1
2025-05-26 17:28:35,566 [main] INFO  c.p.i.PriceIntegrationTest - The following 1 profile is active: "test"
2025-05-26 17:28:35,943 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
2025-05-26 17:28:35,945 [main] DEBUG org.hibernate.SQL - 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
Hibernate: 
    create table prices (
        curr varchar(3) not null,
        price numeric(10,2) not null,
        price_list integer not null,
        priority integer not null,
        brand_id bigint not null,
        end_date timestamp(6) not null,
        id bigint generated by default as identity,
        product_id bigint not null,
        start_date timestamp(6) not null,
        primary key (id)
    )
2025-05-26 17:28:36,137 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Initializing Servlet ''
2025-05-26 17:28:36,138 [main] INFO  o.s.t.w.s.TestDispatcherServlet - Completed initialization in 1 ms
2025-05-26 17:28:36,147 [main] INFO  c.p.i.PriceIntegrationTest - Started PriceIntegrationTest in 0.634 seconds (process running for 32.67)
2025-05-26 17:28:36,148 [main] INFO  com.pruebaItx.PruebaItxApplication - Application started and ready to receive requests
2025-05-26 17:28:36,155 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0
2025-05-26 17:28:36,159 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,161 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,163 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,165 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,167 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,169 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
Hibernate: 
    insert 
    into
        prices
        (brand_id, curr, end_date, price, price_list, priority, product_id, start_date, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, default)
2025-05-26 17:28:36,197 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,197 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,202 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,203 [main] DEBUG org.hibernate.SQL - 
    delete 
    from
        prices 
    where
        id=?
Hibernate: 
    delete 
    from
        prices 
    where
        id=?
2025-05-26 17:28:36,205 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,207 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,218 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,218 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,219 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,221 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,227 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,227 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,228 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,230 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,235 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,236 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,237 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,240 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,245 [main] DEBUG c.p.i.a.in.web.PriceController - Request to getProductPrice: applicationDate=2020-06-14T16:00, productId=35455, brandId=1
2025-05-26 17:28:36,245 [main] DEBUG c.p.a.service.PriceService - Getting applicable price for brand: 1, product: 35455, date: 2020-06-14T16:00
2025-05-26 17:28:36,247 [main] DEBUG org.hibernate.SQL - 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
Hibernate: 
    select
        pe1_0.id,
        pe1_0.brand_id,
        pe1_0.curr,
        pe1_0.end_date,
        pe1_0.price,
        pe1_0.price_list,
        pe1_0.priority,
        pe1_0.product_id,
        pe1_0.start_date 
    from
        prices pe1_0 
    where
        pe1_0.brand_id=? 
        and pe1_0.product_id=? 
        and pe1_0.start_date<=? 
        and pe1_0.end_date>=? 
    order by
        pe1_0.priority desc
2025-05-26 17:28:36,248 [main] DEBUG c.p.a.service.PriceService - Selected price with priority 1 and value 25.45
2025-05-26 17:28:36,257 [main] DEBUG org.hibernate.SQL - 
    drop table if exists prices cascade 
Hibernate: 
    drop table if exists prices cascade 
]]></system-out>
  </testcase>
</testsuite>